{"version":3,"file":"filePicker.js","sourceRoot":"","sources":["../../src/lens-client-interface/filePicker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AA+B7C,MAAM,CAAC,MAAM,iBAAiB,GAAG,UAAU,CACvC,YAAY,EACZ,GAAe,EAAE,CAAC,CAAC,OAAO,EAAE,iBAAiB,EAAE,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAC/E,CAAC","sourcesContent":["import { Injectable } from \"@snap/ts-inject\";\nimport type { FileWithHandle, fileOpen } from \"browser-fs-access\";\n\n/**\n * Default file picker dialog type.\n */\nexport type OpenDefaultFilePicker = typeof fileOpen;\n\n/**\n * File picker options. For example, it indicates which MIME types of files are expected to be picked.\n */\nexport type FilePickerOptions = Parameters<OpenDefaultFilePicker>[0];\n\n/**\n * File picker dialog result object, which is a Promise that resolves to a file or an array of files with handles.\n */\nexport type FilePickerResult = Promise<FileWithHandle | FileWithHandle[]>;\n\n/**\n * A callback to show a file picker dialog.\n * @param options - Options for the file picker dialog.\n * @param openDefaultPicker - The default file picker function. The client app may choose to use\n * the default file picker.\n * @returns A promise that resolves to the result of the file picker dialog.\n */\nexport type FilePicker = (options: FilePickerOptions, openDefaultPicker: OpenDefaultFilePicker) => FilePickerResult;\n\n/**\n * Default file picker factory function. The file picker is triggered when a lens issues a file request.\n * Client applications can override this factory function to provide their custom file picker.\n */\nexport const filePickerFactory = Injectable(\n    \"filePicker\",\n    (): FilePicker => (options, openDefaultPicker) => openDefaultPicker(options)\n);\n"]}