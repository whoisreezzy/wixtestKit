import type { OperationalMetric } from "../../generated-proto/pb_schema/camera_kit/v3/operational_metrics";
import type { MetricDimensions } from "./Metric";
import { Metric } from "./Metric";
/** @internal */
export type CountMetric = OperationalMetric & {
    metric: Extract<OperationalMetric["metric"], {
        $case: "count";
    }>;
};
/** @internal */
export declare function isCountMetric(value: OperationalMetric): value is CountMetric;
/** @internal */
export declare class Count extends Metric {
    readonly name: string;
    static count(name: string, n: number, dimensions?: MetricDimensions): Count;
    private count;
    constructor(name: string, dimensions?: MetricDimensions);
    increment(count: number): number;
    toOperationalMetric(): CountMetric[];
}
//# sourceMappingURL=Count.d.ts.map