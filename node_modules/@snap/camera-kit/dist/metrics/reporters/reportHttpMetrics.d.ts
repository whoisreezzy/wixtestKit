import type { CofDimensions } from "../../remote-configuration/cofHandler";
import type { Dimensions, RequestStateEventTarget } from "../../handlers/requestStateEmittingHandler";
import type { MetricsClient } from "../../clients/metricsClient";
import { type LensCoreDownloadDimensions } from "../../lens-core-module/loader/lensCoreFactory";
import { type GrpcRequestDimensions } from "../../clients/grpcHandler";
import type { AssetDownloadDimensions, LensDownloadDimensions } from "./reportLensAndAssetDownload";
type ReportableMetricDimensions = LensDownloadDimensions | AssetDownloadDimensions | CofDimensions | LensCoreDownloadDimensions | GrpcRequestDimensions;
export declare const isRelevantRequest: (value: Dimensions) => value is ReportableMetricDimensions;
export declare const reportHttpMetrics: {
    (args_0: MetricsClient, args_1: RequestStateEventTarget): void;
    token: "reportHttpMetrics";
    dependencies: readonly ["metricsClient", "requestStateEventTarget"];
};
export {};
//# sourceMappingURL=reportHttpMetrics.d.ts.map