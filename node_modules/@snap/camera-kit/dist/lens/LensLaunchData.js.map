{"version":3,"file":"LensLaunchData.js","sourceRoot":"","sources":["../../src/lens/LensLaunchData.ts"],"names":[],"mappings":"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","sourcesContent":["import { LaunchData } from \"../generated-proto/pb_schema/lenses/launchdata\";\nimport {\n    isArrayOfType,\n    isDateOrUndefined,\n    isValidNumberOrUndefined,\n    isRecord,\n    isString,\n    isStringOrUndefined,\n    isUndefined,\n    isValidNumber,\n    predicateRecordValues,\n} from \"../common/typeguards\";\nimport type { LaunchParams } from \"../generated-proto/pb_schema/lenses/launch_params\";\nimport { UserData_Zodiac } from \"../generated-proto/pb_schema/lenses/user_data\";\nimport type { EnumToPublicStringLiteralMap, ExcludeKeys } from \"../common/types\";\n\n/**\n * Lens launch params.\n */\nexport type LensLaunchParams = Record<string, string | number | string[] | number[]>;\n\n/**\n * Some Lenses may accept (or require) certain data provided to them when the Lens is applied.\n *\n * This data may include things like user info (to render the user's name, for example, or perform some task based on\n * their birth date), or arbitrary `launchParams` defined by the Lens.\n *\n * @category Lenses\n */\nexport interface LensLaunchData {\n    userId?: string;\n    userData?: LensUserData;\n    launchParams?: LensLaunchParams;\n}\n\nexport interface LensUserData {\n    userId?: string;\n    username?: string;\n    birthdate?: string;\n    displayName?: string;\n    countrycode?: string;\n    score?: string;\n    bitmojiInfo?: BitmojiUserInfo;\n    friendInfo?: FriendUserInfo;\n    zodiac?: Zodiac;\n}\n\nexport interface BitmojiUserInfo {\n    avatarId?: string;\n    selfieId?: string;\n}\n\nexport interface FriendUserInfo {\n    friendshipStart?: Date;\n    lastInteraction?: Date;\n    streak?: number;\n}\n\n// Extract public values of UserData_Zodiac\nconst zodiacMap: ExcludeKeys<EnumToPublicStringLiteralMap<typeof UserData_Zodiac>, \"invalid\" | \"unrecognized\"> = {\n    aquarius: UserData_Zodiac.Aquarius,\n    aries: UserData_Zodiac.Aries,\n    cancer: UserData_Zodiac.Cancer,\n    capricorn: UserData_Zodiac.Capricorn,\n    gemini: UserData_Zodiac.Gemini,\n    leo: UserData_Zodiac.Leo,\n    libra: UserData_Zodiac.Libra,\n    pisces: UserData_Zodiac.Pisces,\n    sagittarius: UserData_Zodiac.Sagittarius,\n    scorpio: UserData_Zodiac.Scorpio,\n    taurus: UserData_Zodiac.Taurus,\n    virgo: UserData_Zodiac.Virgo,\n    // NOTE: This rule helps keep the public-facing Zodiac type consistent with the proto.\n    // We prefer using a separate type for TypeDoc purposes.\n} satisfies Record<Zodiac, UserData_Zodiac>;\n\nexport type Zodiac =\n    | \"aquarius\"\n    | \"aries\"\n    | \"cancer\"\n    | \"capricorn\"\n    | \"gemini\"\n    | \"leo\"\n    | \"libra\"\n    | \"pisces\"\n    | \"sagittarius\"\n    | \"scorpio\"\n    | \"taurus\"\n    | \"virgo\";\n\nconst zodiacValueSet = new Set(Object.keys(zodiacMap) as Zodiac[]);\n\nexport function isZodiac(value: unknown): value is Zodiac {\n    return zodiacValueSet.has(value as Zodiac);\n}\n\nexport function isLensLaunchDataOrUndefined(value: unknown): value is LensLaunchData | undefined {\n    return isUndefined(value) || isLensLaunchData(value);\n}\n\nfunction isLensLaunchData(value: unknown): value is LensLaunchData {\n    return (\n        isRecord(value) &&\n        isStringOrUndefined(value.userId) &&\n        isLensUserDataOrUndefined(value.userData) &&\n        isLensLaunchParamsOrUndefined(value.launchParams)\n    );\n}\n\nfunction isLensUserDataOrUndefined(value: unknown): value is LensUserData | undefined {\n    return isUndefined(value) || isLensUserData(value);\n}\n\nfunction isLensUserData(value: unknown): value is LensUserData {\n    return (\n        isRecord(value) &&\n        isStringOrUndefined(value.userId) &&\n        isStringOrUndefined(value.username) &&\n        isStringOrUndefined(value.birthdate) &&\n        isStringOrUndefined(value.displayName) &&\n        isStringOrUndefined(value.countrycode) &&\n        isStringOrUndefined(value.score) &&\n        isBitmojiUserInfoOrUndefined(value.bitmojiInfo) &&\n        isFriendUserInfoOrUndefined(value.friendInfo) &&\n        isZodiacOrUndefined(value.zodiac)\n    );\n}\n\nfunction isBitmojiUserInfoOrUndefined(value: unknown): value is BitmojiUserInfo | undefined {\n    return isUndefined(value) || isBitmojiUserInfo(value);\n}\n\nfunction isBitmojiUserInfo(value: unknown): value is BitmojiUserInfo {\n    return isRecord(value) && isStringOrUndefined(value.avatarId) && isStringOrUndefined(value.selfieId);\n}\n\nfunction isFriendUserInfoOrUndefined(value: unknown): value is FriendUserInfo | undefined {\n    return isUndefined(value) || isFriendUserInfo(value);\n}\n\nfunction isFriendUserInfo(value: unknown): value is FriendUserInfo {\n    return (\n        isRecord(value) &&\n        isDateOrUndefined(value.friendshipStart) &&\n        isDateOrUndefined(value.lastInteraction) &&\n        isValidNumberOrUndefined(value.streak)\n    );\n}\n\nfunction isZodiacOrUndefined(value: unknown): value is Zodiac | undefined {\n    return isUndefined(value) || isZodiac(value);\n}\n\nfunction isLensLaunchParamsOrUndefined(value: unknown): value is LensLaunchParams | undefined {\n    return isUndefined(value) || isLensLaunchParams(value);\n}\n\nfunction isLensLaunchParams(value: unknown): value is LensLaunchParams {\n    return isRecord(value) && predicateRecordValues(isStringOrNumberOrArrayOfStringsOrNumbers)(value);\n}\n\nfunction isStringOrNumberOrArrayOfStringsOrNumbers(value: unknown): value is string | number | string[] | number[] {\n    return (\n        isString(value) || isValidNumber(value) || isArrayOfType(isString, value) || isArrayOfType(isValidNumber, value)\n    );\n}\n\n/**\n * @internal\n */\nexport const encodeLensLaunchData = (launchData: LensLaunchData, persistentStore: ArrayBuffer): Uint8Array => {\n    // finish() protobufjs method returns UInt8Array with shared ArrayBuffer\n    // to avoid of detached buffer error when passing data to Lens Core\n    // data should be copied using slice() method\n    return LaunchData.encode(\n        LaunchData.fromPartial({\n            ...launchData,\n            userData: launchData.userData\n                ? {\n                      ...launchData.userData,\n                      zodiac: launchData.userData?.zodiac ? zodiacMap[launchData.userData.zodiac] : undefined,\n                  }\n                : undefined,\n            launchParams: launchData.launchParams ? encodeLensLaunchParams(launchData.launchParams) : undefined,\n            persistentStore: { store: new Uint8Array(persistentStore) },\n        })\n    )\n        .finish()\n        .slice();\n};\n\nfunction encodeLensLaunchParams(launchParams?: LensLaunchParams): LaunchParams {\n    return { data: new TextEncoder().encode(JSON.stringify(launchParams)) };\n}\n"]}