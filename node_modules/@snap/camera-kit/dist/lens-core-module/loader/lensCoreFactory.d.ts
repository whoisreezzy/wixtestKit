import type { CameraKitConfiguration } from "../../configuration";
import type { FetchHandler } from "../../handlers/defaultFetchHandler";
import type { RequestStateEventTarget } from "../../handlers/requestStateEmittingHandler";
export declare const LENS_CORE_JS_REQUEST_TYPE = "lens_core_js";
export declare const LENS_CORE_WASM_REQUEST_TYPE = "lens_core_wasm";
export interface LensCoreDownloadDimensions extends Record<string, string> {
    requestType: typeof LENS_CORE_JS_REQUEST_TYPE | typeof LENS_CORE_WASM_REQUEST_TYPE;
    customBuild: string;
}
/**
 * This component is responsible for:
 *   1) Loading LensCore WebAssembly (WASM) assets
 *   2) Using the WASM assets to initialize the LensCore WASM module
 *
 * By default, WASM assets will be loaded from the Bolt CDN â€“ but if `endpoint` is provided, assets will be loaded
 * using it as a base URL.
 *
 * @internal
 */
export declare const lensCoreFactory: {
    (args_0: FetchHandler, args_1: CameraKitConfiguration, args_2: RequestStateEventTarget): Promise<import("../lensCore").LensCore>;
    token: "lensCore";
    dependencies: readonly ["defaultFetchHandler", "configuration", "requestStateEventTarget"];
};
//# sourceMappingURL=lensCoreFactory.d.ts.map