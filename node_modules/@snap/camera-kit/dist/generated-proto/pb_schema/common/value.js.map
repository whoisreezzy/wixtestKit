{"version":3,"file":"value.js","sourceRoot":"","sources":["../../../../src/generated-proto/pb_schema/common/value.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,MAAM,CAAC,MAAM,eAAe,GAAG,iBAAiB,CAAC;AAuBjD,SAAS,mBAAmB;IACxB,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;AAClC,CAAC;AACD,MAAM,CAAC,MAAM,SAAS,GAA0B;IAC5C,MAAM,CAAC,OAAkB,EAAE,SAAuB,IAAI,YAAY,EAAE;QAChE,IAAI,OAAO,CAAC,GAAG,KAAK,EAAE,EAAE;YACpB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACzC;QACD,IAAI,OAAO,CAAC,KAAK,KAAK,EAAE,EAAE;YACtB,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,mBAAmB,EAAE,CAAC;QACtC,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC9B,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAA6C,IAAQ;QACvD,OAAO,SAAS,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IACtD,CAAC;IACD,WAAW,CAA6C,MAAS;;QAC7D,MAAM,OAAO,GAAG,mBAAmB,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,GAAG,MAAA,MAAM,CAAC,GAAG,mCAAI,EAAE,CAAC;QAC/B,OAAO,CAAC,KAAK,GAAG,MAAA,MAAM,CAAC,KAAK,mCAAI,EAAE,CAAC;QACnC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC;AACF,SAAS,oBAAoB;IACzB,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAC3B,CAAC;AACD,MAAM,CAAC,MAAM,UAAU,GAA2B;IAC9C,MAAM,CAAC,OAAmB,EAAE,SAAuB,IAAI,YAAY,EAAE;QACjE,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;YAC7B,SAAS,CAAC,MAAM,CAAC,CAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACzD;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,oBAAoB,EAAE,CAAC;QACvC,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAChE,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAA8C,IAAQ;QACxD,OAAO,UAAU,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IACvD,CAAC;IACD,WAAW,CAA8C,MAAS;;QAC9D,MAAM,OAAO,GAAG,oBAAoB,EAAE,CAAC;QACvC,OAAO,CAAC,OAAO,GAAG,CAAA,MAAA,MAAM,CAAC,OAAO,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAC7E,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC;AACF,SAAS,qBAAqB;IAC1B,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;AACzB,CAAC;AACD,MAAM,CAAC,MAAM,WAAW,GAA4B;IAChD,MAAM,CAAC,OAAoB,EAAE,SAAuB,IAAI,YAAY,EAAE;QAClE,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;SAChC;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,qBAAqB,EAAE,CAAC;QACxC,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACpC,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAA+C,IAAQ;QACzD,OAAO,WAAW,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IACxD,CAAC;IACD,WAAW,CAA+C,MAAS;;QAC/D,MAAM,OAAO,GAAG,qBAAqB,EAAE,CAAC;QACxC,OAAO,CAAC,KAAK,GAAG,CAAA,MAAA,MAAM,CAAC,KAAK,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;QAClD,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC;AACF,SAAS,eAAe;IACpB,OAAO;QACH,QAAQ,EAAE,SAAS;QACnB,SAAS,EAAE,SAAS;QACpB,UAAU,EAAE,SAAS;QACrB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,SAAS;QACpB,WAAW,EAAE,SAAS;QACtB,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,SAAS;QACnB,YAAY,EAAE,SAAS;QACvB,gBAAgB,EAAE,SAAS;KAC9B,CAAC;AACN,CAAC;AACD,MAAM,CAAC,MAAM,KAAK,GAAsB;IACpC,MAAM,CAAC,OAAc,EAAE,SAAuB,IAAI,YAAY,EAAE;QAC5D,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;YAChC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,SAAS,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC9C;QACD,IAAI,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;YAClC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;SAC/C;QACD,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,SAAS,KAAK,SAAS,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;YACnC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACjD;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;YAChC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACjE;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;YAChC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACxE;QACD,IAAI,OAAO,CAAC,YAAY,KAAK,SAAS,EAAE;YACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SACnD;QACD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,EAAE;YACxC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SACjF;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,eAAe,EAAE,CAAC;QAClC,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACX,MAAM;qBACT;oBACD,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;oBAC9C,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACpC,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACtC,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;oBAClC,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBACtC,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvD,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC9D,SAAS;iBACZ;gBACD,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;oBACnD,SAAS;iBACZ;gBACD,KAAK,EAAE,CAAC,CAAC;oBACL,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvE,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAAyC,IAAQ;QACnD,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IAClD,CAAC;IACD,WAAW,CAAyC,MAAS;;QACzD,MAAM,OAAO,GAAG,eAAe,EAAE,CAAC;QAClC,OAAO,CAAC,QAAQ,GAAG,MAAA,MAAM,CAAC,QAAQ,mCAAI,SAAS,CAAC;QAChD,OAAO,CAAC,SAAS,GAAG,MAAA,MAAM,CAAC,SAAS,mCAAI,SAAS,CAAC;QAClD,OAAO,CAAC,UAAU,GAAG,MAAA,MAAM,CAAC,UAAU,mCAAI,SAAS,CAAC;QACpD,OAAO,CAAC,WAAW,GAAG,MAAA,MAAM,CAAC,WAAW,mCAAI,SAAS,CAAC;QACtD,OAAO,CAAC,SAAS,GAAG,MAAA,MAAM,CAAC,SAAS,mCAAI,SAAS,CAAC;QAClD,OAAO,CAAC,WAAW,GAAG,MAAA,MAAM,CAAC,WAAW,mCAAI,SAAS,CAAC;QACtD,OAAO,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC;YAC1E,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;YAClC,CAAC,CAAC,SAAS,CAAC;QAChB,OAAO,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC;YAC1E,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;YACzC,CAAC,CAAC,SAAS,CAAC;QAChB,OAAO,CAAC,YAAY,GAAG,MAAA,MAAM,CAAC,YAAY,mCAAI,SAAS,CAAC;QACxD,OAAO,CAAC,gBAAgB,GAAG,CAAC,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,CAAC;YAClG,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAClD,CAAC,CAAC,SAAS,CAAC;QAChB,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface MapRecord {\n    key: string;\n    value: string;\n}\nexport interface MapRecords {\n    records: MapRecord[];\n}\nexport interface StringArray {\n    value: string[];\n}\nexport interface Value {\n    intValue?: number | undefined;\n    longValue?: string | undefined;\n    floatValue?: number | undefined;\n    doubleValue?: number | undefined;\n    boolValue?: boolean | undefined;\n    stringValue?: string | undefined;\n    anyValue?: Any | undefined;\n    mapValue?: MapRecords | undefined;\n    intPairValue?: string | undefined;\n    stringArrayValue?: StringArray | undefined;\n}\nfunction createBaseMapRecord(): MapRecord {\n    return { key: \"\", value: \"\" };\n}\nexport const MapRecord: MessageFns<MapRecord> = {\n    encode(message: MapRecord, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): MapRecord {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecord();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<MapRecord>, I>>(base?: I): MapRecord {\n        return MapRecord.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecord>, I>>(object: I): MapRecord {\n        const message = createBaseMapRecord();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseMapRecords(): MapRecords {\n    return { records: [] };\n}\nexport const MapRecords: MessageFns<MapRecords> = {\n    encode(message: MapRecords, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        for (const v of message.records) {\n            MapRecord.encode(v!, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): MapRecords {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMapRecords();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.records.push(MapRecord.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<MapRecords>, I>>(base?: I): MapRecords {\n        return MapRecords.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<MapRecords>, I>>(object: I): MapRecords {\n        const message = createBaseMapRecords();\n        message.records = object.records?.map((e) => MapRecord.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseStringArray(): StringArray {\n    return { value: [] };\n}\nexport const StringArray: MessageFns<StringArray> = {\n    encode(message: StringArray, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        for (const v of message.value) {\n            writer.uint32(10).string(v!);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): StringArray {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStringArray();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.value.push(reader.string());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<StringArray>, I>>(base?: I): StringArray {\n        return StringArray.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<StringArray>, I>>(object: I): StringArray {\n        const message = createBaseStringArray();\n        message.value = object.value?.map((e) => e) || [];\n        return message;\n    },\n};\nfunction createBaseValue(): Value {\n    return {\n        intValue: undefined,\n        longValue: undefined,\n        floatValue: undefined,\n        doubleValue: undefined,\n        boolValue: undefined,\n        stringValue: undefined,\n        anyValue: undefined,\n        mapValue: undefined,\n        intPairValue: undefined,\n        stringArrayValue: undefined,\n    };\n}\nexport const Value: MessageFns<Value> = {\n    encode(message: Value, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.intValue !== undefined) {\n            writer.uint32(8).int32(message.intValue);\n        }\n        if (message.longValue !== undefined) {\n            writer.uint32(16).int64(message.longValue);\n        }\n        if (message.floatValue !== undefined) {\n            writer.uint32(29).float(message.floatValue);\n        }\n        if (message.doubleValue !== undefined) {\n            writer.uint32(73).double(message.doubleValue);\n        }\n        if (message.boolValue !== undefined) {\n            writer.uint32(32).bool(message.boolValue);\n        }\n        if (message.stringValue !== undefined) {\n            writer.uint32(42).string(message.stringValue);\n        }\n        if (message.anyValue !== undefined) {\n            Any.encode(message.anyValue, writer.uint32(50).fork()).join();\n        }\n        if (message.mapValue !== undefined) {\n            MapRecords.encode(message.mapValue, writer.uint32(58).fork()).join();\n        }\n        if (message.intPairValue !== undefined) {\n            writer.uint32(65).fixed64(message.intPairValue);\n        }\n        if (message.stringArrayValue !== undefined) {\n            StringArray.encode(message.stringArrayValue, writer.uint32(82).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): Value {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValue();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.intValue = reader.int32();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.longValue = reader.int64().toString();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 29) {\n                        break;\n                    }\n                    message.floatValue = reader.float();\n                    continue;\n                }\n                case 9: {\n                    if (tag !== 73) {\n                        break;\n                    }\n                    message.doubleValue = reader.double();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.boolValue = reader.bool();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.stringValue = reader.string();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.anyValue = Any.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.mapValue = MapRecords.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 8: {\n                    if (tag !== 65) {\n                        break;\n                    }\n                    message.intPairValue = reader.fixed64().toString();\n                    continue;\n                }\n                case 10: {\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.stringArrayValue = StringArray.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<Value>, I>>(base?: I): Value {\n        return Value.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<Value>, I>>(object: I): Value {\n        const message = createBaseValue();\n        message.intValue = object.intValue ?? undefined;\n        message.longValue = object.longValue ?? undefined;\n        message.floatValue = object.floatValue ?? undefined;\n        message.doubleValue = object.doubleValue ?? undefined;\n        message.boolValue = object.boolValue ?? undefined;\n        message.stringValue = object.stringValue ?? undefined;\n        message.anyValue = (object.anyValue !== undefined && object.anyValue !== null)\n            ? Any.fromPartial(object.anyValue)\n            : undefined;\n        message.mapValue = (object.mapValue !== undefined && object.mapValue !== null)\n            ? MapRecords.fromPartial(object.mapValue)\n            : undefined;\n        message.intPairValue = object.intPairValue ?? undefined;\n        message.stringArrayValue = (object.stringArrayValue !== undefined && object.stringArrayValue !== null)\n            ? StringArray.fromPartial(object.stringArrayValue)\n            : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}