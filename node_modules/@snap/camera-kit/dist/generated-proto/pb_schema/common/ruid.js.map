{"version":3,"file":"ruid.js","sourceRoot":"","sources":["../../../../src/generated-proto/pb_schema/common/ruid.ts"],"names":[],"mappings":"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","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nexport const protobufPackage = \"snapchat.common\";\nexport interface Ruid {\n    type: Ruid_Type;\n    stringValue: string;\n    loggingIdValue: string;\n}\nexport enum Ruid_Type {\n    UNSET = 0,\n    USER = 1,\n    DEVICE = 2,\n    WEB_CLIENT = 3,\n    AD_ACCOUNT = 4,\n    USERNAME = 5,\n    AD_MODERATION_AD = 6,\n    WEB_SNAPCHAT_USER = 7,\n    INTERNAL = 8,\n    AM_ORGANIZATION = 9,\n    AM_MEMBER = 10,\n    AM_SESSION = 11,\n    AM_PROFILE = 12,\n    AM_SNAPCHAT_USER = 13,\n    SNAPCHAT_ADVERTISING = 14,\n    AM_CLIENT = 15,\n    MISCHIEF = 16,\n    ARES_VISITOR = 17,\n    POD_NAME = 18,\n    UNRECOGNIZED = -1\n}\nfunction createBaseRuid(): Ruid {\n    return { type: 0, stringValue: \"\", loggingIdValue: \"\" };\n}\nexport const Ruid: MessageFns<Ruid> = {\n    encode(message: Ruid, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.stringValue !== \"\") {\n            writer.uint32(18).string(message.stringValue);\n        }\n        if (message.loggingIdValue !== \"\") {\n            writer.uint32(26).string(message.loggingIdValue);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): Ruid {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRuid();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.type = reader.int32() as any;\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.stringValue = reader.string();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.loggingIdValue = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<Ruid>, I>>(base?: I): Ruid {\n        return Ruid.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<Ruid>, I>>(object: I): Ruid {\n        const message = createBaseRuid();\n        message.type = object.type ?? 0;\n        message.stringValue = object.stringValue ?? \"\";\n        message.loggingIdValue = object.loggingIdValue ?? \"\";\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}