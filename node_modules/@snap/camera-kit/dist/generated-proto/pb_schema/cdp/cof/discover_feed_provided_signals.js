import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
export const protobufPackage = "snapchat.cdp.cof";
function createBaseDiscoverFeedSignals() {
    return { discoverFeedSectionCacheInfo: undefined };
}
export const DiscoverFeedSignals = {
    encode(message, writer = new BinaryWriter()) {
        if (message.discoverFeedSectionCacheInfo !== undefined) {
            DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.encode(message.discoverFeedSectionCacheInfo, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDiscoverFeedSignals();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.discoverFeedSectionCacheInfo = DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create(base) {
        return DiscoverFeedSignals.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        const message = createBaseDiscoverFeedSignals();
        message.discoverFeedSectionCacheInfo =
            (object.discoverFeedSectionCacheInfo !== undefined && object.discoverFeedSectionCacheInfo !== null)
                ? DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.fromPartial(object.discoverFeedSectionCacheInfo)
                : undefined;
        return message;
    },
};
function createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo() {
    return { feedType: 0 };
}
export const DiscoverFeedSignals_DiscoverFeedSectionCacheInfo = {
    encode(message, writer = new BinaryWriter()) {
        if (message.feedType !== 0) {
            writer.uint32(8).int32(message.feedType);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.feedType = reader.int32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create(base) {
        return DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo();
        message.feedType = (_a = object.feedType) !== null && _a !== void 0 ? _a : 0;
        return message;
    },
};
//# sourceMappingURL=discover_feed_provided_signals.js.map