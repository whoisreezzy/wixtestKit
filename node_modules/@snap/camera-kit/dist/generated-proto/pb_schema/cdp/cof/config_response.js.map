{"version":3,"file":"config_response.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/config_response.ts"],"names":[],"mappings":"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","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport { BenchmarkRequest } from \"./benchmark\";\nimport { ConfigResult } from \"./config_result\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface ConfigTargetingResponseDebugData {\n    abResultChecksumInput: string;\n}\nexport interface CofGradualRollout {\n    uuid: Uint8Array;\n    isControl: boolean;\n}\nexport interface ConfigTargetingResponse {\n    configResults: ConfigResult[];\n    configResultsEtag: string;\n    benchmarkRequest: BenchmarkRequest | undefined;\n    fullResults: boolean;\n    abResultChecksum: number;\n    iso3166Alpha2CountryCodeFromRequestIp: string;\n    debugData: ConfigTargetingResponseDebugData | undefined;\n    cofGrapheneContext: Uint8Array;\n}\nfunction createBaseConfigTargetingResponseDebugData(): ConfigTargetingResponseDebugData {\n    return { abResultChecksumInput: \"\" };\n}\nexport const ConfigTargetingResponseDebugData: MessageFns<ConfigTargetingResponseDebugData> = {\n    encode(message: ConfigTargetingResponseDebugData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.abResultChecksumInput !== \"\") {\n            writer.uint32(10).string(message.abResultChecksumInput);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): ConfigTargetingResponseDebugData {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponseDebugData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.abResultChecksumInput = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<ConfigTargetingResponseDebugData>, I>>(base?: I): ConfigTargetingResponseDebugData {\n        return ConfigTargetingResponseDebugData.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponseDebugData>, I>>(object: I): ConfigTargetingResponseDebugData {\n        const message = createBaseConfigTargetingResponseDebugData();\n        message.abResultChecksumInput = object.abResultChecksumInput ?? \"\";\n        return message;\n    },\n};\nfunction createBaseCofGradualRollout(): CofGradualRollout {\n    return { uuid: new Uint8Array(0), isControl: false };\n}\nexport const CofGradualRollout: MessageFns<CofGradualRollout> = {\n    encode(message: CofGradualRollout, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.uuid.length !== 0) {\n            writer.uint32(10).bytes(message.uuid);\n        }\n        if (message.isControl !== false) {\n            writer.uint32(16).bool(message.isControl);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): CofGradualRollout {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCofGradualRollout();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.uuid = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.isControl = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<CofGradualRollout>, I>>(base?: I): CofGradualRollout {\n        return CofGradualRollout.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<CofGradualRollout>, I>>(object: I): CofGradualRollout {\n        const message = createBaseCofGradualRollout();\n        message.uuid = object.uuid ?? new Uint8Array(0);\n        message.isControl = object.isControl ?? false;\n        return message;\n    },\n};\nfunction createBaseConfigTargetingResponse(): ConfigTargetingResponse {\n    return {\n        configResults: [],\n        configResultsEtag: \"\",\n        benchmarkRequest: undefined,\n        fullResults: false,\n        abResultChecksum: 0,\n        iso3166Alpha2CountryCodeFromRequestIp: \"\",\n        debugData: undefined,\n        cofGrapheneContext: new Uint8Array(0),\n    };\n}\nexport const ConfigTargetingResponse: MessageFns<ConfigTargetingResponse> = {\n    encode(message: ConfigTargetingResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        for (const v of message.configResults) {\n            ConfigResult.encode(v!, writer.uint32(10).fork()).join();\n        }\n        if (message.configResultsEtag !== \"\") {\n            writer.uint32(18).string(message.configResultsEtag);\n        }\n        if (message.benchmarkRequest !== undefined) {\n            BenchmarkRequest.encode(message.benchmarkRequest, writer.uint32(26).fork()).join();\n        }\n        if (message.fullResults !== false) {\n            writer.uint32(32).bool(message.fullResults);\n        }\n        if (message.abResultChecksum !== 0) {\n            writer.uint32(40).int32(message.abResultChecksum);\n        }\n        if (message.iso3166Alpha2CountryCodeFromRequestIp !== \"\") {\n            writer.uint32(50).string(message.iso3166Alpha2CountryCodeFromRequestIp);\n        }\n        if (message.debugData !== undefined) {\n            ConfigTargetingResponseDebugData.encode(message.debugData, writer.uint32(58).fork()).join();\n        }\n        if (message.cofGrapheneContext.length !== 0) {\n            writer.uint32(106).bytes(message.cofGrapheneContext);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): ConfigTargetingResponse {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConfigTargetingResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.configResults.push(ConfigResult.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.configResultsEtag = reader.string();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.benchmarkRequest = BenchmarkRequest.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.fullResults = reader.bool();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.abResultChecksum = reader.int32();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.iso3166Alpha2CountryCodeFromRequestIp = reader.string();\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.debugData = ConfigTargetingResponseDebugData.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 13: {\n                    if (tag !== 106) {\n                        break;\n                    }\n                    message.cofGrapheneContext = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<ConfigTargetingResponse>, I>>(base?: I): ConfigTargetingResponse {\n        return ConfigTargetingResponse.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<ConfigTargetingResponse>, I>>(object: I): ConfigTargetingResponse {\n        const message = createBaseConfigTargetingResponse();\n        message.configResults = object.configResults?.map((e) => ConfigResult.fromPartial(e)) || [];\n        message.configResultsEtag = object.configResultsEtag ?? \"\";\n        message.benchmarkRequest = (object.benchmarkRequest !== undefined && object.benchmarkRequest !== null)\n            ? BenchmarkRequest.fromPartial(object.benchmarkRequest)\n            : undefined;\n        message.fullResults = object.fullResults ?? false;\n        message.abResultChecksum = object.abResultChecksum ?? 0;\n        message.iso3166Alpha2CountryCodeFromRequestIp = object.iso3166Alpha2CountryCodeFromRequestIp ?? \"\";\n        message.debugData = (object.debugData !== undefined && object.debugData !== null)\n            ? ConfigTargetingResponseDebugData.fromPartial(object.debugData)\n            : undefined;\n        message.cofGrapheneContext = object.cofGrapheneContext ?? new Uint8Array(0);\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}