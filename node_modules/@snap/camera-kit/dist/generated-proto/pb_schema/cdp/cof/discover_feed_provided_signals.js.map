{"version":3,"file":"discover_feed_provided_signals.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/cdp/cof/discover_feed_provided_signals.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AACrE,MAAM,CAAC,MAAM,eAAe,GAAG,kBAAkB,CAAC;AAOlD,SAAS,6BAA6B;IAClC,OAAO,EAAE,4BAA4B,EAAE,SAAS,EAAE,CAAC;AACvD,CAAC;AACD,MAAM,CAAC,MAAM,mBAAmB,GAAoC;IAChE,MAAM,CAAC,OAA4B,EAAE,SAAuB,IAAI,YAAY,EAAE;QAC1E,IAAI,OAAO,CAAC,4BAA4B,KAAK,SAAS,EAAE;YACpD,gDAAgD,CAAC,MAAM,CAAC,OAAO,CAAC,4BAA4B,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;SAClI;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,6BAA6B,EAAE,CAAC;QAChD,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,EAAE,EAAE;wBACZ,MAAM;qBACT;oBACD,OAAO,CAAC,4BAA4B,GAAG,gDAAgD,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACxH,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAAuD,IAAQ;QACjE,OAAO,mBAAmB,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IAChE,CAAC;IACD,WAAW,CAAuD,MAAS;QACvE,MAAM,OAAO,GAAG,6BAA6B,EAAE,CAAC;QAChD,OAAO,CAAC,4BAA4B;YAChC,CAAC,MAAM,CAAC,4BAA4B,KAAK,SAAS,IAAI,MAAM,CAAC,4BAA4B,KAAK,IAAI,CAAC;gBAC/F,CAAC,CAAC,gDAAgD,CAAC,WAAW,CAAC,MAAM,CAAC,4BAA4B,CAAC;gBACnG,CAAC,CAAC,SAAS,CAAC;QACpB,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC;AACF,SAAS,0DAA0D;IAC/D,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;AAC3B,CAAC;AACD,MAAM,CAAC,MAAM,gDAAgD,GAAiE;IAC1H,MAAM,CAAC,OAAyD,EAAE,SAAuB,IAAI,YAAY,EAAE;QACvG,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,EAAE;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5C;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,CAAC,KAAgC,EAAE,MAAe;QACpD,MAAM,MAAM,GAAG,KAAK,YAAY,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QAC/E,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,0DAA0D,EAAE,CAAC;QAC7E,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC,EAAE;gBACf,KAAK,CAAC,CAAC,CAAC;oBACJ,IAAI,GAAG,KAAK,CAAC,EAAE;wBACX,MAAM;qBACT;oBACD,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAClC,SAAS;iBACZ;aACJ;YACD,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;gBAC9B,MAAM;aACT;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IACD,MAAM,CAAoF,IAAQ;QAC9F,OAAO,gDAAgD,CAAC,WAAW,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAK,EAAU,CAAC,CAAC;IAC7F,CAAC;IACD,WAAW,CAAoF,MAAS;;QACpG,MAAM,OAAO,GAAG,0DAA0D,EAAE,CAAC;QAC7E,OAAO,CAAC,QAAQ,GAAG,MAAA,MAAM,CAAC,QAAQ,mCAAI,CAAC,CAAC;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ,CAAC","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nexport const protobufPackage = \"snapchat.cdp.cof\";\nexport interface DiscoverFeedSignals {\n    discoverFeedSectionCacheInfo: DiscoverFeedSignals_DiscoverFeedSectionCacheInfo | undefined;\n}\nexport interface DiscoverFeedSignals_DiscoverFeedSectionCacheInfo {\n    feedType: number;\n}\nfunction createBaseDiscoverFeedSignals(): DiscoverFeedSignals {\n    return { discoverFeedSectionCacheInfo: undefined };\n}\nexport const DiscoverFeedSignals: MessageFns<DiscoverFeedSignals> = {\n    encode(message: DiscoverFeedSignals, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.discoverFeedSectionCacheInfo !== undefined) {\n            DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.encode(message.discoverFeedSectionCacheInfo, writer.uint32(10).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): DiscoverFeedSignals {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDiscoverFeedSignals();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.discoverFeedSectionCacheInfo = DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<DiscoverFeedSignals>, I>>(base?: I): DiscoverFeedSignals {\n        return DiscoverFeedSignals.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<DiscoverFeedSignals>, I>>(object: I): DiscoverFeedSignals {\n        const message = createBaseDiscoverFeedSignals();\n        message.discoverFeedSectionCacheInfo =\n            (object.discoverFeedSectionCacheInfo !== undefined && object.discoverFeedSectionCacheInfo !== null)\n                ? DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.fromPartial(object.discoverFeedSectionCacheInfo)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo(): DiscoverFeedSignals_DiscoverFeedSectionCacheInfo {\n    return { feedType: 0 };\n}\nexport const DiscoverFeedSignals_DiscoverFeedSectionCacheInfo: MessageFns<DiscoverFeedSignals_DiscoverFeedSectionCacheInfo> = {\n    encode(message: DiscoverFeedSignals_DiscoverFeedSectionCacheInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.feedType !== 0) {\n            writer.uint32(8).int32(message.feedType);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): DiscoverFeedSignals_DiscoverFeedSectionCacheInfo {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.feedType = reader.int32();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<DiscoverFeedSignals_DiscoverFeedSectionCacheInfo>, I>>(base?: I): DiscoverFeedSignals_DiscoverFeedSectionCacheInfo {\n        return DiscoverFeedSignals_DiscoverFeedSectionCacheInfo.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<DiscoverFeedSignals_DiscoverFeedSectionCacheInfo>, I>>(object: I): DiscoverFeedSignals_DiscoverFeedSectionCacheInfo {\n        const message = createBaseDiscoverFeedSignals_DiscoverFeedSectionCacheInfo();\n        message.feedType = object.feedType ?? 0;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}