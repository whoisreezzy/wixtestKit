{"version":3,"file":"lures.js","sourceRoot":"","sources":["../../../../src/generated-proto/pb_schema/lenses/lures.ts"],"names":[],"mappings":"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","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport { Geocircle } from \"./geocircle\";\nexport const protobufPackage = \"snapchat.lenses\";\nexport interface Lures {\n    locations: Geocircle[];\n    activeLure: Geocircle | undefined;\n    closestLure: Geocircle | undefined;\n}\nfunction createBaseLures(): Lures {\n    return { locations: [], activeLure: undefined, closestLure: undefined };\n}\nexport const Lures: MessageFns<Lures> = {\n    encode(message: Lures, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        for (const v of message.locations) {\n            Geocircle.encode(v!, writer.uint32(10).fork()).join();\n        }\n        if (message.activeLure !== undefined) {\n            Geocircle.encode(message.activeLure, writer.uint32(18).fork()).join();\n        }\n        if (message.closestLure !== undefined) {\n            Geocircle.encode(message.closestLure, writer.uint32(26).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): Lures {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLures();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.locations.push(Geocircle.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.activeLure = Geocircle.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.closestLure = Geocircle.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<Lures>, I>>(base?: I): Lures {\n        return Lures.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<Lures>, I>>(object: I): Lures {\n        const message = createBaseLures();\n        message.locations = object.locations?.map((e) => Geocircle.fromPartial(e)) || [];\n        message.activeLure = (object.activeLure !== undefined && object.activeLure !== null)\n            ? Geocircle.fromPartial(object.activeLure)\n            : undefined;\n        message.closestLure = (object.closestLure !== undefined && object.closestLure !== null)\n            ? Geocircle.fromPartial(object.closestLure)\n            : undefined;\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}