import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { Geopoint } from "./geopoint";
export const protobufPackage = "snapchat.lenses";
function createBaseGeocircle() {
    return { radius: 0, center: undefined };
}
export const Geocircle = {
    encode(message, writer = new BinaryWriter()) {
        if (message.radius !== 0) {
            writer.uint32(9).double(message.radius);
        }
        if (message.center !== undefined) {
            Geopoint.encode(message.center, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGeocircle();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 9) {
                        break;
                    }
                    message.radius = reader.double();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.center = Geopoint.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create(base) {
        return Geocircle.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGeocircle();
        message.radius = (_a = object.radius) !== null && _a !== void 0 ? _a : 0;
        message.center = (object.center !== undefined && object.center !== null)
            ? Geopoint.fromPartial(object.center)
            : undefined;
        return message;
    },
};
//# sourceMappingURL=geocircle.js.map