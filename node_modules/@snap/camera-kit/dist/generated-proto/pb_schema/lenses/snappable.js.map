{"version":3,"file":"snappable.js","sourceRoot":"","sources":["../../../../src/generated-proto/pb_schema/lenses/snappable.ts"],"names":[],"mappings":"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","sourcesContent":["import { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nexport const protobufPackage = \"snapchat.lenses.snappable\";\nexport interface EncryptionData {\n    key: Uint8Array;\n    ivStore: {\n        [key: string]: Uint8Array;\n    };\n    isKeyServerEncrypted: boolean;\n    isKeyE2eEncrypted: boolean;\n    encryptionScheme: EncryptionData_EncryptionScheme;\n}\nexport enum EncryptionData_EncryptionScheme {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    SPOOKEY = \"SPOOKEY\",\n    REGISTRY = \"REGISTRY\",\n    FIDELIUS = \"FIDELIUS\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function encryptionData_EncryptionSchemeFromJSON(object: any): EncryptionData_EncryptionScheme {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        case 1:\n        case \"SPOOKEY\":\n            return EncryptionData_EncryptionScheme.SPOOKEY;\n        case 2:\n        case \"REGISTRY\":\n            return EncryptionData_EncryptionScheme.REGISTRY;\n        case 3:\n        case \"FIDELIUS\":\n            return EncryptionData_EncryptionScheme.FIDELIUS;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EncryptionData_EncryptionScheme.UNRECOGNIZED;\n    }\n}\nexport function encryptionData_EncryptionSchemeToNumber(object: EncryptionData_EncryptionScheme): number {\n    switch (object) {\n        case EncryptionData_EncryptionScheme.NOT_APPLICABLE:\n            return 0;\n        case EncryptionData_EncryptionScheme.SPOOKEY:\n            return 1;\n        case EncryptionData_EncryptionScheme.REGISTRY:\n            return 2;\n        case EncryptionData_EncryptionScheme.FIDELIUS:\n            return 3;\n        case EncryptionData_EncryptionScheme.UNRECOGNIZED:\n        default:\n            return -1;\n    }\n}\nexport interface EncryptionData_IvStoreEntry {\n    key: string;\n    value: Uint8Array;\n}\nexport interface PlayerData {\n    store: {\n        [key: string]: string;\n    };\n    serializedStore: Uint8Array;\n}\nexport interface PlayerData_StoreEntry {\n    key: string;\n    value: string;\n}\nexport interface SessionData {\n    playerData: {\n        [key: string]: PlayerData;\n    };\n}\nexport interface SessionData_PlayerDataEntry {\n    key: string;\n    value: PlayerData | undefined;\n}\nexport interface SnappableMedia {\n    sessionId: string;\n    playerId: string;\n    url: string;\n    key: string;\n    createdTime: string;\n}\nexport interface Snap3DData {\n    allowZippedMedia: boolean;\n}\nexport interface UsesCameraRoll {\n    usesCameraRoll: boolean;\n}\nexport interface SnappableMessage {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n    effectId: string;\n    userIds: string[];\n    focusPointX: number;\n    focusPointY: number;\n    focusPointWidth: number;\n    replyType: SnappableMessage_ReplyType;\n    snap3dData: Snap3DData | undefined;\n    usesCameraRollData: UsesCameraRoll | undefined;\n    assetBatchId: string;\n}\nexport enum SnappableMessage_ReplyType {\n    NOT_APPLICABLE = \"NOT_APPLICABLE\",\n    CONTEXT = \"CONTEXT\",\n    INTERSTITIAL = \"INTERSTITIAL\",\n    UNRECOGNIZED = \"UNRECOGNIZED\"\n}\nexport function snappableMessage_ReplyTypeFromJSON(object: any): SnappableMessage_ReplyType {\n    switch (object) {\n        case 0:\n        case \"NOT_APPLICABLE\":\n            return SnappableMessage_ReplyType.NOT_APPLICABLE;\n        case 1:\n        case \"CONTEXT\":\n            return SnappableMessage_ReplyType.CONTEXT;\n        case 2:\n        case \"INTERSTITIAL\":\n            return SnappableMessage_ReplyType.INTERSTITIAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SnappableMessage_ReplyType.UNRECOGNIZED;\n    }\n}\nexport function snappableMessage_ReplyTypeToNumber(object: SnappableMessage_ReplyType): number {\n    switch (object) {\n        case SnappableMessage_ReplyType.NOT_APPLICABLE:\n            return 0;\n        case SnappableMessage_ReplyType.CONTEXT:\n            return 1;\n        case SnappableMessage_ReplyType.INTERSTITIAL:\n            return 2;\n        case SnappableMessage_ReplyType.UNRECOGNIZED:\n        default:\n            return -1;\n    }\n}\nexport interface Snappable {\n    id: string;\n    sessionId: string;\n    playerId: string;\n    sessionData: SessionData | undefined;\n    createdTime: string;\n    expireTime: string;\n    version: number;\n    encryptionData: EncryptionData | undefined;\n    sessionDepth: number;\n}\nexport interface PutSnappableRequest {\n    snappable: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface PutSnappableResponse {\n    id: string;\n}\nexport interface GetSnappableRequest {\n    id: string;\n}\nexport interface GetSnappableResponse {\n    data: Snappable | undefined;\n    media: SnappableMedia[];\n}\nexport interface SnappableEncryptedKey {\n    encryptedKey: Uint8Array;\n    encryptionKeyId: string;\n    encryptionKeyIv: Uint8Array;\n}\nfunction createBaseEncryptionData(): EncryptionData {\n    return {\n        key: new Uint8Array(0),\n        ivStore: {},\n        isKeyServerEncrypted: false,\n        isKeyE2eEncrypted: false,\n        encryptionScheme: EncryptionData_EncryptionScheme.NOT_APPLICABLE,\n    };\n}\nexport const EncryptionData: MessageFns<EncryptionData> = {\n    encode(message: EncryptionData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        Object.entries(message.ivStore).forEach(([key, value]) => {\n            EncryptionData_IvStoreEntry.encode({ key: key as any, value }, writer.uint32(18).fork()).join();\n        });\n        if (message.isKeyServerEncrypted !== false) {\n            writer.uint32(24).bool(message.isKeyServerEncrypted);\n        }\n        if (message.isKeyE2eEncrypted !== false) {\n            writer.uint32(32).bool(message.isKeyE2eEncrypted);\n        }\n        if (message.encryptionScheme !== EncryptionData_EncryptionScheme.NOT_APPLICABLE) {\n            writer.uint32(40).int32(encryptionData_EncryptionSchemeToNumber(message.encryptionScheme));\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): EncryptionData {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    const entry2 = EncryptionData_IvStoreEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.ivStore[entry2.key] = entry2.value;\n                    }\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.isKeyServerEncrypted = reader.bool();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.isKeyE2eEncrypted = reader.bool();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.encryptionScheme = encryptionData_EncryptionSchemeFromJSON(reader.int32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<EncryptionData>, I>>(base?: I): EncryptionData {\n        return EncryptionData.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData>, I>>(object: I): EncryptionData {\n        const message = createBaseEncryptionData();\n        message.key = object.key ?? new Uint8Array(0);\n        message.ivStore = Object.entries(object.ivStore ?? {}).reduce<{\n            [key: string]: Uint8Array;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = value;\n            }\n            return acc;\n        }, {});\n        message.isKeyServerEncrypted = object.isKeyServerEncrypted ?? false;\n        message.isKeyE2eEncrypted = object.isKeyE2eEncrypted ?? false;\n        message.encryptionScheme = object.encryptionScheme ?? EncryptionData_EncryptionScheme.NOT_APPLICABLE;\n        return message;\n    },\n};\nfunction createBaseEncryptionData_IvStoreEntry(): EncryptionData_IvStoreEntry {\n    return { key: \"\", value: new Uint8Array(0) };\n}\nexport const EncryptionData_IvStoreEntry: MessageFns<EncryptionData_IvStoreEntry> = {\n    encode(message: EncryptionData_IvStoreEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): EncryptionData_IvStoreEntry {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEncryptionData_IvStoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<EncryptionData_IvStoreEntry>, I>>(base?: I): EncryptionData_IvStoreEntry {\n        return EncryptionData_IvStoreEntry.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<EncryptionData_IvStoreEntry>, I>>(object: I): EncryptionData_IvStoreEntry {\n        const message = createBaseEncryptionData_IvStoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBasePlayerData(): PlayerData {\n    return { store: {}, serializedStore: new Uint8Array(0) };\n}\nexport const PlayerData: MessageFns<PlayerData> = {\n    encode(message: PlayerData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        Object.entries(message.store).forEach(([key, value]) => {\n            PlayerData_StoreEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).join();\n        });\n        if (message.serializedStore.length !== 0) {\n            writer.uint32(18).bytes(message.serializedStore);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): PlayerData {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    const entry1 = PlayerData_StoreEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.store[entry1.key] = entry1.value;\n                    }\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.serializedStore = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<PlayerData>, I>>(base?: I): PlayerData {\n        return PlayerData.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData>, I>>(object: I): PlayerData {\n        const message = createBasePlayerData();\n        message.store = Object.entries(object.store ?? {}).reduce<{\n            [key: string]: string;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = globalThis.String(value);\n            }\n            return acc;\n        }, {});\n        message.serializedStore = object.serializedStore ?? new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBasePlayerData_StoreEntry(): PlayerData_StoreEntry {\n    return { key: \"\", value: \"\" };\n}\nexport const PlayerData_StoreEntry: MessageFns<PlayerData_StoreEntry> = {\n    encode(message: PlayerData_StoreEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): PlayerData_StoreEntry {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePlayerData_StoreEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<PlayerData_StoreEntry>, I>>(base?: I): PlayerData_StoreEntry {\n        return PlayerData_StoreEntry.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<PlayerData_StoreEntry>, I>>(object: I): PlayerData_StoreEntry {\n        const message = createBasePlayerData_StoreEntry();\n        message.key = object.key ?? \"\";\n        message.value = object.value ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSessionData(): SessionData {\n    return { playerData: {} };\n}\nexport const SessionData: MessageFns<SessionData> = {\n    encode(message: SessionData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        Object.entries(message.playerData).forEach(([key, value]) => {\n            SessionData_PlayerDataEntry.encode({ key: key as any, value }, writer.uint32(10).fork()).join();\n        });\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): SessionData {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    const entry1 = SessionData_PlayerDataEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.playerData[entry1.key] = entry1.value;\n                    }\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<SessionData>, I>>(base?: I): SessionData {\n        return SessionData.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData>, I>>(object: I): SessionData {\n        const message = createBaseSessionData();\n        message.playerData = Object.entries(object.playerData ?? {}).reduce<{\n            [key: string]: PlayerData;\n        }>((acc, [key, value]) => {\n            if (value !== undefined) {\n                acc[key] = PlayerData.fromPartial(value);\n            }\n            return acc;\n        }, {});\n        return message;\n    },\n};\nfunction createBaseSessionData_PlayerDataEntry(): SessionData_PlayerDataEntry {\n    return { key: \"\", value: undefined };\n}\nexport const SessionData_PlayerDataEntry: MessageFns<SessionData_PlayerDataEntry> = {\n    encode(message: SessionData_PlayerDataEntry, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            PlayerData.encode(message.value, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): SessionData_PlayerDataEntry {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSessionData_PlayerDataEntry();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = PlayerData.decode(reader, reader.uint32());\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<SessionData_PlayerDataEntry>, I>>(base?: I): SessionData_PlayerDataEntry {\n        return SessionData_PlayerDataEntry.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<SessionData_PlayerDataEntry>, I>>(object: I): SessionData_PlayerDataEntry {\n        const message = createBaseSessionData_PlayerDataEntry();\n        message.key = object.key ?? \"\";\n        message.value = (object.value !== undefined && object.value !== null)\n            ? PlayerData.fromPartial(object.value)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSnappableMedia(): SnappableMedia {\n    return { sessionId: \"\", playerId: \"\", url: \"\", key: \"\", createdTime: \"0\" };\n}\nexport const SnappableMedia: MessageFns<SnappableMedia> = {\n    encode(message: SnappableMedia, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.sessionId !== \"\") {\n            writer.uint32(10).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(18).string(message.playerId);\n        }\n        if (message.url !== \"\") {\n            writer.uint32(26).string(message.url);\n        }\n        if (message.key !== \"\") {\n            writer.uint32(34).string(message.key);\n        }\n        if (message.createdTime !== \"0\") {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): SnappableMedia {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMedia();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.sessionId = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.playerId = reader.string();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.url = reader.string();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.createdTime = reader.int64().toString();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<SnappableMedia>, I>>(base?: I): SnappableMedia {\n        return SnappableMedia.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMedia>, I>>(object: I): SnappableMedia {\n        const message = createBaseSnappableMedia();\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.url = object.url ?? \"\";\n        message.key = object.key ?? \"\";\n        message.createdTime = object.createdTime ?? \"0\";\n        return message;\n    },\n};\nfunction createBaseSnap3DData(): Snap3DData {\n    return { allowZippedMedia: false };\n}\nexport const Snap3DData: MessageFns<Snap3DData> = {\n    encode(message: Snap3DData, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.allowZippedMedia !== false) {\n            writer.uint32(8).bool(message.allowZippedMedia);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): Snap3DData {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnap3DData();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.allowZippedMedia = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<Snap3DData>, I>>(base?: I): Snap3DData {\n        return Snap3DData.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<Snap3DData>, I>>(object: I): Snap3DData {\n        const message = createBaseSnap3DData();\n        message.allowZippedMedia = object.allowZippedMedia ?? false;\n        return message;\n    },\n};\nfunction createBaseUsesCameraRoll(): UsesCameraRoll {\n    return { usesCameraRoll: false };\n}\nexport const UsesCameraRoll: MessageFns<UsesCameraRoll> = {\n    encode(message: UsesCameraRoll, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.usesCameraRoll !== false) {\n            writer.uint32(8).bool(message.usesCameraRoll);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): UsesCameraRoll {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseUsesCameraRoll();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.usesCameraRoll = reader.bool();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<UsesCameraRoll>, I>>(base?: I): UsesCameraRoll {\n        return UsesCameraRoll.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<UsesCameraRoll>, I>>(object: I): UsesCameraRoll {\n        const message = createBaseUsesCameraRoll();\n        message.usesCameraRoll = object.usesCameraRoll ?? false;\n        return message;\n    },\n};\nfunction createBaseSnappableMessage(): SnappableMessage {\n    return {\n        snappable: undefined,\n        media: [],\n        effectId: \"\",\n        userIds: [],\n        focusPointX: 0,\n        focusPointY: 0,\n        focusPointWidth: 0,\n        replyType: SnappableMessage_ReplyType.NOT_APPLICABLE,\n        snap3dData: undefined,\n        usesCameraRollData: undefined,\n        assetBatchId: \"\",\n    };\n}\nexport const SnappableMessage: MessageFns<SnappableMessage> = {\n    encode(message: SnappableMessage, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).join();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).join();\n        }\n        if (message.effectId !== \"\") {\n            writer.uint32(26).string(message.effectId);\n        }\n        for (const v of message.userIds) {\n            writer.uint32(34).string(v!);\n        }\n        if (message.focusPointX !== 0) {\n            writer.uint32(45).float(message.focusPointX);\n        }\n        if (message.focusPointY !== 0) {\n            writer.uint32(53).float(message.focusPointY);\n        }\n        if (message.focusPointWidth !== 0) {\n            writer.uint32(61).float(message.focusPointWidth);\n        }\n        if (message.replyType !== SnappableMessage_ReplyType.NOT_APPLICABLE) {\n            writer.uint32(64).int32(snappableMessage_ReplyTypeToNumber(message.replyType));\n        }\n        if (message.snap3dData !== undefined) {\n            Snap3DData.encode(message.snap3dData, writer.uint32(74).fork()).join();\n        }\n        if (message.usesCameraRollData !== undefined) {\n            UsesCameraRoll.encode(message.usesCameraRollData, writer.uint32(82).fork()).join();\n        }\n        if (message.assetBatchId !== \"\") {\n            writer.uint32(4002).string(message.assetBatchId);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): SnappableMessage {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableMessage();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.effectId = reader.string();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.userIds.push(reader.string());\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 45) {\n                        break;\n                    }\n                    message.focusPointX = reader.float();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 53) {\n                        break;\n                    }\n                    message.focusPointY = reader.float();\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 61) {\n                        break;\n                    }\n                    message.focusPointWidth = reader.float();\n                    continue;\n                }\n                case 8: {\n                    if (tag !== 64) {\n                        break;\n                    }\n                    message.replyType = snappableMessage_ReplyTypeFromJSON(reader.int32());\n                    continue;\n                }\n                case 9: {\n                    if (tag !== 74) {\n                        break;\n                    }\n                    message.snap3dData = Snap3DData.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 10: {\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.usesCameraRollData = UsesCameraRoll.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 500: {\n                    if (tag !== 4002) {\n                        break;\n                    }\n                    message.assetBatchId = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<SnappableMessage>, I>>(base?: I): SnappableMessage {\n        return SnappableMessage.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableMessage>, I>>(object: I): SnappableMessage {\n        const message = createBaseSnappableMessage();\n        message.snappable = (object.snappable !== undefined && object.snappable !== null)\n            ? Snappable.fromPartial(object.snappable)\n            : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        message.effectId = object.effectId ?? \"\";\n        message.userIds = object.userIds?.map((e) => e) || [];\n        message.focusPointX = object.focusPointX ?? 0;\n        message.focusPointY = object.focusPointY ?? 0;\n        message.focusPointWidth = object.focusPointWidth ?? 0;\n        message.replyType = object.replyType ?? SnappableMessage_ReplyType.NOT_APPLICABLE;\n        message.snap3dData = (object.snap3dData !== undefined && object.snap3dData !== null)\n            ? Snap3DData.fromPartial(object.snap3dData)\n            : undefined;\n        message.usesCameraRollData = (object.usesCameraRollData !== undefined && object.usesCameraRollData !== null)\n            ? UsesCameraRoll.fromPartial(object.usesCameraRollData)\n            : undefined;\n        message.assetBatchId = object.assetBatchId ?? \"\";\n        return message;\n    },\n};\nfunction createBaseSnappable(): Snappable {\n    return {\n        id: \"\",\n        sessionId: \"\",\n        playerId: \"\",\n        sessionData: undefined,\n        createdTime: \"0\",\n        expireTime: \"0\",\n        version: 0,\n        encryptionData: undefined,\n        sessionDepth: 0,\n    };\n}\nexport const Snappable: MessageFns<Snappable> = {\n    encode(message: Snappable, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sessionId !== \"\") {\n            writer.uint32(18).string(message.sessionId);\n        }\n        if (message.playerId !== \"\") {\n            writer.uint32(26).string(message.playerId);\n        }\n        if (message.sessionData !== undefined) {\n            SessionData.encode(message.sessionData, writer.uint32(34).fork()).join();\n        }\n        if (message.createdTime !== \"0\") {\n            writer.uint32(40).int64(message.createdTime);\n        }\n        if (message.expireTime !== \"0\") {\n            writer.uint32(48).int64(message.expireTime);\n        }\n        if (message.version !== 0) {\n            writer.uint32(56).int32(message.version);\n        }\n        if (message.encryptionData !== undefined) {\n            EncryptionData.encode(message.encryptionData, writer.uint32(66).fork()).join();\n        }\n        if (message.sessionDepth !== 0) {\n            writer.uint32(72).int32(message.sessionDepth);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): Snappable {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappable();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.sessionId = reader.string();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.playerId = reader.string();\n                    continue;\n                }\n                case 4: {\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.sessionData = SessionData.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 5: {\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.createdTime = reader.int64().toString();\n                    continue;\n                }\n                case 6: {\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.expireTime = reader.int64().toString();\n                    continue;\n                }\n                case 7: {\n                    if (tag !== 56) {\n                        break;\n                    }\n                    message.version = reader.int32();\n                    continue;\n                }\n                case 8: {\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.encryptionData = EncryptionData.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 9: {\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.sessionDepth = reader.int32();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<Snappable>, I>>(base?: I): Snappable {\n        return Snappable.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<Snappable>, I>>(object: I): Snappable {\n        const message = createBaseSnappable();\n        message.id = object.id ?? \"\";\n        message.sessionId = object.sessionId ?? \"\";\n        message.playerId = object.playerId ?? \"\";\n        message.sessionData = (object.sessionData !== undefined && object.sessionData !== null)\n            ? SessionData.fromPartial(object.sessionData)\n            : undefined;\n        message.createdTime = object.createdTime ?? \"0\";\n        message.expireTime = object.expireTime ?? \"0\";\n        message.version = object.version ?? 0;\n        message.encryptionData = (object.encryptionData !== undefined && object.encryptionData !== null)\n            ? EncryptionData.fromPartial(object.encryptionData)\n            : undefined;\n        message.sessionDepth = object.sessionDepth ?? 0;\n        return message;\n    },\n};\nfunction createBasePutSnappableRequest(): PutSnappableRequest {\n    return { snappable: undefined, media: [] };\n}\nexport const PutSnappableRequest: MessageFns<PutSnappableRequest> = {\n    encode(message: PutSnappableRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.snappable !== undefined) {\n            Snappable.encode(message.snappable, writer.uint32(10).fork()).join();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): PutSnappableRequest {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.snappable = Snappable.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<PutSnappableRequest>, I>>(base?: I): PutSnappableRequest {\n        return PutSnappableRequest.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableRequest>, I>>(object: I): PutSnappableRequest {\n        const message = createBasePutSnappableRequest();\n        message.snappable = (object.snappable !== undefined && object.snappable !== null)\n            ? Snappable.fromPartial(object.snappable)\n            : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBasePutSnappableResponse(): PutSnappableResponse {\n    return { id: \"\" };\n}\nexport const PutSnappableResponse: MessageFns<PutSnappableResponse> = {\n    encode(message: PutSnappableResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): PutSnappableResponse {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePutSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<PutSnappableResponse>, I>>(base?: I): PutSnappableResponse {\n        return PutSnappableResponse.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<PutSnappableResponse>, I>>(object: I): PutSnappableResponse {\n        const message = createBasePutSnappableResponse();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableRequest(): GetSnappableRequest {\n    return { id: \"\" };\n}\nexport const GetSnappableRequest: MessageFns<GetSnappableRequest> = {\n    encode(message: GetSnappableRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): GetSnappableRequest {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.id = reader.string();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<GetSnappableRequest>, I>>(base?: I): GetSnappableRequest {\n        return GetSnappableRequest.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableRequest>, I>>(object: I): GetSnappableRequest {\n        const message = createBaseGetSnappableRequest();\n        message.id = object.id ?? \"\";\n        return message;\n    },\n};\nfunction createBaseGetSnappableResponse(): GetSnappableResponse {\n    return { data: undefined, media: [] };\n}\nexport const GetSnappableResponse: MessageFns<GetSnappableResponse> = {\n    encode(message: GetSnappableResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.data !== undefined) {\n            Snappable.encode(message.data, writer.uint32(10).fork()).join();\n        }\n        for (const v of message.media) {\n            SnappableMedia.encode(v!, writer.uint32(18).fork()).join();\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): GetSnappableResponse {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseGetSnappableResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.data = Snappable.decode(reader, reader.uint32());\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.media.push(SnappableMedia.decode(reader, reader.uint32()));\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<GetSnappableResponse>, I>>(base?: I): GetSnappableResponse {\n        return GetSnappableResponse.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<GetSnappableResponse>, I>>(object: I): GetSnappableResponse {\n        const message = createBaseGetSnappableResponse();\n        message.data = (object.data !== undefined && object.data !== null) ? Snappable.fromPartial(object.data) : undefined;\n        message.media = object.media?.map((e) => SnappableMedia.fromPartial(e)) || [];\n        return message;\n    },\n};\nfunction createBaseSnappableEncryptedKey(): SnappableEncryptedKey {\n    return { encryptedKey: new Uint8Array(0), encryptionKeyId: \"\", encryptionKeyIv: new Uint8Array(0) };\n}\nexport const SnappableEncryptedKey: MessageFns<SnappableEncryptedKey> = {\n    encode(message: SnappableEncryptedKey, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n        if (message.encryptedKey.length !== 0) {\n            writer.uint32(10).bytes(message.encryptedKey);\n        }\n        if (message.encryptionKeyId !== \"\") {\n            writer.uint32(18).string(message.encryptionKeyId);\n        }\n        if (message.encryptionKeyIv.length !== 0) {\n            writer.uint32(26).bytes(message.encryptionKeyIv);\n        }\n        return writer;\n    },\n    decode(input: BinaryReader | Uint8Array, length?: number): SnappableEncryptedKey {\n        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnappableEncryptedKey();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1: {\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.encryptedKey = reader.bytes();\n                    continue;\n                }\n                case 2: {\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.encryptionKeyId = reader.string();\n                    continue;\n                }\n                case 3: {\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.encryptionKeyIv = reader.bytes();\n                    continue;\n                }\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skip(tag & 7);\n        }\n        return message;\n    },\n    create<I extends Exact<DeepPartial<SnappableEncryptedKey>, I>>(base?: I): SnappableEncryptedKey {\n        return SnappableEncryptedKey.fromPartial(base ?? ({} as any));\n    },\n    fromPartial<I extends Exact<DeepPartial<SnappableEncryptedKey>, I>>(object: I): SnappableEncryptedKey {\n        const message = createBaseSnappableEncryptedKey();\n        message.encryptedKey = object.encryptedKey ?? new Uint8Array(0);\n        message.encryptionKeyId = object.encryptionKeyId ?? \"\";\n        message.encryptionKeyIv = object.encryptionKeyIv ?? new Uint8Array(0);\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & {\n    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;\n};\nexport interface MessageFns<T> {\n    encode(message: T, writer?: BinaryWriter): BinaryWriter;\n    decode(input: BinaryReader | Uint8Array, length?: number): T;\n    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}