{"version":3,"file":"descriptor.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/google/protobuf/descriptor.ts"],"names":[],"mappings":"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","sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.2.4\n//   protoc               v5.28.2\n// source: google/protobuf/descriptor.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n */\nexport interface FileDescriptorSet {\n  file: FileDescriptorProto[];\n}\n\n/** Describes a complete .proto file. */\nexport interface FileDescriptorProto {\n  /** file name, relative to root of source tree */\n  name?:\n    | string\n    | undefined;\n  /** e.g. \"foo\", \"foo.bar\", etc. */\n  package?:\n    | string\n    | undefined;\n  /** Names of files imported by this file. */\n  dependency: string[];\n  /** Indexes of the public imported files in the dependency list above. */\n  publicDependency: number[];\n  /**\n   * Indexes of the weak imported files in the dependency list.\n   * For Google-internal migration only. Do not use.\n   */\n  weakDependency: number[];\n  /** All top-level definitions in this file. */\n  messageType: DescriptorProto[];\n  enumType: EnumDescriptorProto[];\n  service: ServiceDescriptorProto[];\n  extension: FieldDescriptorProto[];\n  options?:\n    | FileOptions\n    | undefined;\n  /**\n   * This field contains optional information about the original source code.\n   * You may safely remove this entire field without harming runtime\n   * functionality of the descriptors -- the information is needed only by\n   * development tools.\n   */\n  sourceCodeInfo?:\n    | SourceCodeInfo\n    | undefined;\n  /**\n   * The syntax of the proto file.\n   * The supported values are \"proto2\" and \"proto3\".\n   */\n  syntax?: string | undefined;\n}\n\n/** Describes a message type. */\nexport interface DescriptorProto {\n  name?: string | undefined;\n  field: FieldDescriptorProto[];\n  extension: FieldDescriptorProto[];\n  nestedType: DescriptorProto[];\n  enumType: EnumDescriptorProto[];\n  extensionRange: DescriptorProto_ExtensionRange[];\n  oneofDecl: OneofDescriptorProto[];\n  options?: MessageOptions | undefined;\n  reservedRange: DescriptorProto_ReservedRange[];\n  /**\n   * Reserved field names, which may not be used by fields in the same message.\n   * A given name may only be reserved once.\n   */\n  reservedName: string[];\n}\n\nexport interface DescriptorProto_ExtensionRange {\n  /** Inclusive. */\n  start?:\n    | number\n    | undefined;\n  /** Exclusive. */\n  end?: number | undefined;\n  options?: ExtensionRangeOptions | undefined;\n}\n\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n */\nexport interface DescriptorProto_ReservedRange {\n  /** Inclusive. */\n  start?:\n    | number\n    | undefined;\n  /** Exclusive. */\n  end?: number | undefined;\n}\n\nexport interface ExtensionRangeOptions {\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/** Describes a field within a message. */\nexport interface FieldDescriptorProto {\n  name?: string | undefined;\n  number?: number | undefined;\n  label?:\n    | FieldDescriptorProto_Label\n    | undefined;\n  /**\n   * If type_name is set, this need not be set.  If both this and type_name\n   * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n   */\n  type?:\n    | FieldDescriptorProto_Type\n    | undefined;\n  /**\n   * For message and enum types, this is the name of the type.  If the name\n   * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n   * rules are used to find the type (i.e. first the nested types within this\n   * message are searched, then within the parent, on up to the root\n   * namespace).\n   */\n  typeName?:\n    | string\n    | undefined;\n  /**\n   * For extensions, this is the name of the type being extended.  It is\n   * resolved in the same manner as type_name.\n   */\n  extendee?:\n    | string\n    | undefined;\n  /**\n   * For numeric types, contains the original text representation of the value.\n   * For booleans, \"true\" or \"false\".\n   * For strings, contains the default text contents (not escaped in any way).\n   * For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n   * TODO(kenton):  Base-64 encode?\n   */\n  defaultValue?:\n    | string\n    | undefined;\n  /**\n   * If set, gives the index of a oneof in the containing type's oneof_decl\n   * list.  This field is a member of that oneof.\n   */\n  oneofIndex?:\n    | number\n    | undefined;\n  /**\n   * JSON name of this field. The value is set by protocol compiler. If the\n   * user has set a \"json_name\" option on this field, that option's value\n   * will be used. Otherwise, it's deduced from the field's name by converting\n   * it to camelCase.\n   */\n  jsonName?: string | undefined;\n  options?:\n    | FieldOptions\n    | undefined;\n  /**\n   * If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n   * tracks presence regardless of field type.\n   *\n   * When proto3_optional is true, this field must be belong to a oneof to\n   * signal to old proto3 clients that presence is tracked for this field. This\n   * oneof is known as a \"synthetic\" oneof, and this field must be its sole\n   * member (each proto3 optional field gets its own synthetic oneof). Synthetic\n   * oneofs exist in the descriptor only, and do not generate any API. Synthetic\n   * oneofs must be ordered after all \"real\" oneofs.\n   *\n   * For message fields, proto3_optional doesn't create any semantic change,\n   * since non-repeated message fields always track presence. However it still\n   * indicates the semantic detail of whether the user wrote \"optional\" or not.\n   * This can be useful for round-tripping the .proto file. For consistency we\n   * give message fields a synthetic oneof also, even though it is not required\n   * to track presence. This is especially important because the parser can't\n   * tell if a field is a message or an enum, so it must always create a\n   * synthetic oneof.\n   *\n   * Proto2 optional fields do not set this flag, because they already indicate\n   * optional with `LABEL_OPTIONAL`.\n   */\n  proto3Optional?: boolean | undefined;\n}\n\nexport enum FieldDescriptorProto_Type {\n  /**\n   * TYPE_DOUBLE - 0 is reserved for errors.\n   * Order is weird for historical reasons.\n   */\n  TYPE_DOUBLE = 1,\n  TYPE_FLOAT = 2,\n  /**\n   * TYPE_INT64 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n   * negative values are likely.\n   */\n  TYPE_INT64 = 3,\n  TYPE_UINT64 = 4,\n  /**\n   * TYPE_INT32 - Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n   * negative values are likely.\n   */\n  TYPE_INT32 = 5,\n  TYPE_FIXED64 = 6,\n  TYPE_FIXED32 = 7,\n  TYPE_BOOL = 8,\n  TYPE_STRING = 9,\n  /**\n   * TYPE_GROUP - Tag-delimited aggregate.\n   * Group type is deprecated and not supported in proto3. However, Proto3\n   * implementations should still be able to parse the group wire format and\n   * treat group fields as unknown fields.\n   */\n  TYPE_GROUP = 10,\n  /** TYPE_MESSAGE - Length-delimited aggregate. */\n  TYPE_MESSAGE = 11,\n  /** TYPE_BYTES - New in version 2. */\n  TYPE_BYTES = 12,\n  TYPE_UINT32 = 13,\n  TYPE_ENUM = 14,\n  TYPE_SFIXED32 = 15,\n  TYPE_SFIXED64 = 16,\n  /** TYPE_SINT32 - Uses ZigZag encoding. */\n  TYPE_SINT32 = 17,\n  /** TYPE_SINT64 - Uses ZigZag encoding. */\n  TYPE_SINT64 = 18,\n  UNRECOGNIZED = -1,\n}\n\nexport enum FieldDescriptorProto_Label {\n  /** LABEL_OPTIONAL - 0 is reserved for errors */\n  LABEL_OPTIONAL = 1,\n  LABEL_REQUIRED = 2,\n  LABEL_REPEATED = 3,\n  UNRECOGNIZED = -1,\n}\n\n/** Describes a oneof. */\nexport interface OneofDescriptorProto {\n  name?: string | undefined;\n  options?: OneofOptions | undefined;\n}\n\n/** Describes an enum type. */\nexport interface EnumDescriptorProto {\n  name?: string | undefined;\n  value: EnumValueDescriptorProto[];\n  options?:\n    | EnumOptions\n    | undefined;\n  /**\n   * Range of reserved numeric values. Reserved numeric values may not be used\n   * by enum values in the same enum declaration. Reserved ranges may not\n   * overlap.\n   */\n  reservedRange: EnumDescriptorProto_EnumReservedRange[];\n  /**\n   * Reserved enum value names, which may not be reused. A given name may only\n   * be reserved once.\n   */\n  reservedName: string[];\n}\n\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n */\nexport interface EnumDescriptorProto_EnumReservedRange {\n  /** Inclusive. */\n  start?:\n    | number\n    | undefined;\n  /** Inclusive. */\n  end?: number | undefined;\n}\n\n/** Describes a value within an enum. */\nexport interface EnumValueDescriptorProto {\n  name?: string | undefined;\n  number?: number | undefined;\n  options?: EnumValueOptions | undefined;\n}\n\n/** Describes a service. */\nexport interface ServiceDescriptorProto {\n  name?: string | undefined;\n  method: MethodDescriptorProto[];\n  options?: ServiceOptions | undefined;\n}\n\n/** Describes a method of a service. */\nexport interface MethodDescriptorProto {\n  name?:\n    | string\n    | undefined;\n  /**\n   * Input and output type names.  These are resolved in the same way as\n   * FieldDescriptorProto.type_name, but must refer to a message type.\n   */\n  inputType?: string | undefined;\n  outputType?: string | undefined;\n  options?:\n    | MethodOptions\n    | undefined;\n  /** Identifies if client streams multiple client messages */\n  clientStreaming?:\n    | boolean\n    | undefined;\n  /** Identifies if server streams multiple server messages */\n  serverStreaming?: boolean | undefined;\n}\n\nexport interface FileOptions {\n  /**\n   * Sets the Java package where classes generated from this .proto will be\n   * placed.  By default, the proto package is used, but this is often\n   * inappropriate because proto packages do not normally start with backwards\n   * domain names.\n   */\n  javaPackage?:\n    | string\n    | undefined;\n  /**\n   * If set, all the classes from the .proto file are wrapped in a single\n   * outer class with the given name.  This applies to both Proto1\n   * (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n   * a .proto always translates to a single class, but you may want to\n   * explicitly choose the class name).\n   */\n  javaOuterClassname?:\n    | string\n    | undefined;\n  /**\n   * If set true, then the Java code generator will generate a separate .java\n   * file for each top-level message, enum, and service defined in the .proto\n   * file.  Thus, these types will *not* be nested inside the outer class\n   * named by java_outer_classname.  However, the outer class will still be\n   * generated to contain the file's getDescriptor() method as well as any\n   * top-level extensions defined in the file.\n   */\n  javaMultipleFiles?:\n    | boolean\n    | undefined;\n  /**\n   * This option does nothing.\n   *\n   * @deprecated\n   */\n  javaGenerateEqualsAndHash?:\n    | boolean\n    | undefined;\n  /**\n   * If set true, then the Java2 code generator will generate code that\n   * throws an exception whenever an attempt is made to assign a non-UTF-8\n   * byte sequence to a string field.\n   * Message reflection will do the same.\n   * However, an extension field still accepts non-UTF-8 byte sequences.\n   * This option has no effect on when used with the lite runtime.\n   */\n  javaStringCheckUtf8?: boolean | undefined;\n  optimizeFor?:\n    | FileOptions_OptimizeMode\n    | undefined;\n  /**\n   * Sets the Go package where structs generated from this .proto will be\n   * placed. If omitted, the Go package will be derived from the following:\n   *   - The basename of the package import path, if provided.\n   *   - Otherwise, the package statement in the .proto file, if present.\n   *   - Otherwise, the basename of the .proto file, without extension.\n   */\n  goPackage?:\n    | string\n    | undefined;\n  /**\n   * Should generic services be generated in each language?  \"Generic\" services\n   * are not specific to any particular RPC system.  They are generated by the\n   * main code generators in each language (without additional plugins).\n   * Generic services were the only kind of service generation supported by\n   * early versions of google.protobuf.\n   *\n   * Generic services are now considered deprecated in favor of using plugins\n   * that generate code specific to your particular RPC system.  Therefore,\n   * these default to false.  Old code which depends on generic services should\n   * explicitly set them to true.\n   */\n  ccGenericServices?: boolean | undefined;\n  javaGenericServices?: boolean | undefined;\n  pyGenericServices?: boolean | undefined;\n  phpGenericServices?:\n    | boolean\n    | undefined;\n  /**\n   * Is this file deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for everything in the file, or it will be completely ignored; in the very\n   * least, this is a formalization for deprecating files.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /**\n   * Enables the use of arenas for the proto messages in this file. This applies\n   * only to generated classes for C++.\n   */\n  ccEnableArenas?:\n    | boolean\n    | undefined;\n  /**\n   * Sets the objective c class prefix which is prepended to all objective c\n   * generated classes from this .proto. There is no default.\n   */\n  objcClassPrefix?:\n    | string\n    | undefined;\n  /** Namespace for generated classes; defaults to the package. */\n  csharpNamespace?:\n    | string\n    | undefined;\n  /**\n   * By default Swift generators will take the proto package and CamelCase it\n   * replacing '.' with underscore and use that to prefix the types/symbols\n   * defined. When this options is provided, they will use this value instead\n   * to prefix the types/symbols defined.\n   */\n  swiftPrefix?:\n    | string\n    | undefined;\n  /**\n   * Sets the php class prefix which is prepended to all php generated classes\n   * from this .proto. Default is empty.\n   */\n  phpClassPrefix?:\n    | string\n    | undefined;\n  /**\n   * Use this option to change the namespace of php generated classes. Default\n   * is empty. When this option is empty, the package name will be used for\n   * determining the namespace.\n   */\n  phpNamespace?:\n    | string\n    | undefined;\n  /**\n   * Use this option to change the namespace of php generated metadata classes.\n   * Default is empty. When this option is empty, the proto file name will be\n   * used for determining the namespace.\n   */\n  phpMetadataNamespace?:\n    | string\n    | undefined;\n  /**\n   * Use this option to change the package of ruby generated classes. Default\n   * is empty. When this option is not set, the package name will be used for\n   * determining the ruby package.\n   */\n  rubyPackage?:\n    | string\n    | undefined;\n  /**\n   * The parser stores options it doesn't recognize here.\n   * See the documentation for the \"Options\" section above.\n   */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/** Generated classes can be optimized for speed or code size. */\nexport enum FileOptions_OptimizeMode {\n  /** SPEED - Generate complete code for parsing, serialization, */\n  SPEED = 1,\n  /** CODE_SIZE - etc. */\n  CODE_SIZE = 2,\n  /** LITE_RUNTIME - Generate code using MessageLite and the lite runtime. */\n  LITE_RUNTIME = 3,\n  UNRECOGNIZED = -1,\n}\n\nexport interface MessageOptions {\n  /**\n   * Set true to use the old proto1 MessageSet wire format for extensions.\n   * This is provided for backwards-compatibility with the MessageSet wire\n   * format.  You should not use this for any other reason:  It's less\n   * efficient, has fewer features, and is more complicated.\n   *\n   * The message must be defined exactly as follows:\n   *   message Foo {\n   *     option message_set_wire_format = true;\n   *     extensions 4 to max;\n   *   }\n   * Note that the message cannot have any defined fields; MessageSets only\n   * have extensions.\n   *\n   * All extensions of your type must be singular messages; e.g. they cannot\n   * be int32s, enums, or repeated messages.\n   *\n   * Because this is an option, the above two restrictions are not enforced by\n   * the protocol compiler.\n   */\n  messageSetWireFormat?:\n    | boolean\n    | undefined;\n  /**\n   * Disables the generation of the standard \"descriptor()\" accessor, which can\n   * conflict with a field of the same name.  This is meant to make migration\n   * from proto1 easier; new code should avoid fields named \"descriptor\".\n   */\n  noStandardDescriptorAccessor?:\n    | boolean\n    | undefined;\n  /**\n   * Is this message deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the message, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating messages.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /**\n   * Whether the message is an automatically generated map entry type for the\n   * maps field.\n   *\n   * For maps fields:\n   *     map<KeyType, ValueType> map_field = 1;\n   * The parsed descriptor looks like:\n   *     message MapFieldEntry {\n   *         option map_entry = true;\n   *         optional KeyType key = 1;\n   *         optional ValueType value = 2;\n   *     }\n   *     repeated MapFieldEntry map_field = 1;\n   *\n   * Implementations may choose not to generate the map_entry=true message, but\n   * use a native map in the target language to hold the keys and values.\n   * The reflection APIs in such implementations still need to work as\n   * if the field is a repeated message field.\n   *\n   * NOTE: Do not set the option in .proto files. Always use the maps syntax\n   * instead. The option should only be implicitly set by the proto compiler\n   * parser.\n   */\n  mapEntry?:\n    | boolean\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface FieldOptions {\n  /**\n   * The ctype option instructs the C++ code generator to use a different\n   * representation of the field than it normally would.  See the specific\n   * options below.  This option is not yet implemented in the open source\n   * release -- sorry, we'll try to include it in a future version!\n   */\n  ctype?:\n    | FieldOptions_CType\n    | undefined;\n  /**\n   * The packed option can be enabled for repeated primitive fields to enable\n   * a more efficient representation on the wire. Rather than repeatedly\n   * writing the tag and type for each element, the entire array is encoded as\n   * a single length-delimited blob. In proto3, only explicit setting it to\n   * false will avoid using packed encoding.\n   */\n  packed?:\n    | boolean\n    | undefined;\n  /**\n   * The jstype option determines the JavaScript type used for values of the\n   * field.  The option is permitted only for 64 bit integral and fixed types\n   * (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n   * is represented as JavaScript string, which avoids loss of precision that\n   * can happen when a large value is converted to a floating point JavaScript.\n   * Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n   * use the JavaScript \"number\" type.  The behavior of the default option\n   * JS_NORMAL is implementation dependent.\n   *\n   * This option is an enum to permit additional types to be added, e.g.\n   * goog.math.Integer.\n   */\n  jstype?:\n    | FieldOptions_JSType\n    | undefined;\n  /**\n   * Should this field be parsed lazily?  Lazy applies only to message-type\n   * fields.  It means that when the outer message is initially parsed, the\n   * inner message's contents will not be parsed but instead stored in encoded\n   * form.  The inner message will actually be parsed when it is first accessed.\n   *\n   * This is only a hint.  Implementations are free to choose whether to use\n   * eager or lazy parsing regardless of the value of this option.  However,\n   * setting this option true suggests that the protocol author believes that\n   * using lazy parsing on this field is worth the additional bookkeeping\n   * overhead typically needed to implement it.\n   *\n   * This option does not affect the public interface of any generated code;\n   * all method signatures remain the same.  Furthermore, thread-safety of the\n   * interface is not affected by this option; const methods remain safe to\n   * call from multiple threads concurrently, while non-const methods continue\n   * to require exclusive access.\n   *\n   * Note that implementations may choose not to check required fields within\n   * a lazy sub-message.  That is, calling IsInitialized() on the outer message\n   * may return true even if the inner message has missing required fields.\n   * This is necessary because otherwise the inner message would have to be\n   * parsed in order to perform the check, defeating the purpose of lazy\n   * parsing.  An implementation which chooses not to check required fields\n   * must be consistent about it.  That is, for any particular sub-message, the\n   * implementation must either *always* check its required fields, or *never*\n   * check its required fields, regardless of whether or not the message has\n   * been parsed.\n   */\n  lazy?:\n    | boolean\n    | undefined;\n  /**\n   * Is this field deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for accessors, or it will be completely ignored; in the very least, this\n   * is a formalization for deprecating fields.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /** For Google-internal migration only. Do not use. */\n  weak?:\n    | boolean\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport enum FieldOptions_CType {\n  /** STRING - Default mode. */\n  STRING = 0,\n  CORD = 1,\n  STRING_PIECE = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport enum FieldOptions_JSType {\n  /** JS_NORMAL - Use the default type. */\n  JS_NORMAL = 0,\n  /** JS_STRING - Use JavaScript strings. */\n  JS_STRING = 1,\n  /** JS_NUMBER - Use JavaScript numbers. */\n  JS_NUMBER = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport interface OneofOptions {\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface EnumOptions {\n  /**\n   * Set this option to true to allow mapping different tag names to the same\n   * value.\n   */\n  allowAlias?:\n    | boolean\n    | undefined;\n  /**\n   * Is this enum deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the enum, or it will be completely ignored; in the very least, this\n   * is a formalization for deprecating enums.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface EnumValueOptions {\n  /**\n   * Is this enum value deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the enum value, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating enum values.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface ServiceOptions {\n  /**\n   * Is this service deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the service, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating services.\n   */\n  deprecated?:\n    | boolean\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\nexport interface MethodOptions {\n  /**\n   * Is this method deprecated?\n   * Depending on the target platform, this can emit Deprecated annotations\n   * for the method, or it will be completely ignored; in the very least,\n   * this is a formalization for deprecating methods.\n   */\n  deprecated?: boolean | undefined;\n  idempotencyLevel?:\n    | MethodOptions_IdempotencyLevel\n    | undefined;\n  /** The parser stores options it doesn't recognize here. See above. */\n  uninterpretedOption: UninterpretedOption[];\n}\n\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n */\nexport enum MethodOptions_IdempotencyLevel {\n  IDEMPOTENCY_UNKNOWN = 0,\n  /** NO_SIDE_EFFECTS - implies idempotent */\n  NO_SIDE_EFFECTS = 1,\n  /** IDEMPOTENT - idempotent, but may have side effects */\n  IDEMPOTENT = 2,\n  UNRECOGNIZED = -1,\n}\n\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n */\nexport interface UninterpretedOption {\n  name: UninterpretedOption_NamePart[];\n  /**\n   * The value of the uninterpreted option, in whatever type the tokenizer\n   * identified it as during parsing. Exactly one of these should be set.\n   */\n  identifierValue?: string | undefined;\n  positiveIntValue?: string | undefined;\n  negativeIntValue?: string | undefined;\n  doubleValue?: number | undefined;\n  stringValue?: Uint8Array | undefined;\n  aggregateValue?: string | undefined;\n}\n\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n * \"foo.(bar.baz).qux\".\n */\nexport interface UninterpretedOption_NamePart {\n  namePart: string;\n  isExtension: boolean;\n}\n\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n */\nexport interface SourceCodeInfo {\n  /**\n   * A Location identifies a piece of source code in a .proto file which\n   * corresponds to a particular definition.  This information is intended\n   * to be useful to IDEs, code indexers, documentation generators, and similar\n   * tools.\n   *\n   * For example, say we have a file like:\n   *   message Foo {\n   *     optional string foo = 1;\n   *   }\n   * Let's look at just the field definition:\n   *   optional string foo = 1;\n   *   ^       ^^     ^^  ^  ^^^\n   *   a       bc     de  f  ghi\n   * We have the following locations:\n   *   span   path               represents\n   *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n   *\n   * Notes:\n   * - A location may refer to a repeated field itself (i.e. not to any\n   *   particular index within it).  This is used whenever a set of elements are\n   *   logically enclosed in a single code segment.  For example, an entire\n   *   extend block (possibly containing multiple extension definitions) will\n   *   have an outer location whose path refers to the \"extensions\" repeated\n   *   field without an index.\n   * - Multiple locations may have the same path.  This happens when a single\n   *   logical declaration is spread out across multiple places.  The most\n   *   obvious example is the \"extend\" block again -- there may be multiple\n   *   extend blocks in the same scope, each of which will have the same path.\n   * - A location's span is not always a subset of its parent's span.  For\n   *   example, the \"extendee\" of an extension declaration appears at the\n   *   beginning of the \"extend\" block and is shared by all extensions within\n   *   the block.\n   * - Just because a location's span is a subset of some other location's span\n   *   does not mean that it is a descendant.  For example, a \"group\" defines\n   *   both a type and a field in a single declaration.  Thus, the locations\n   *   corresponding to the type and field and their components will overlap.\n   * - Code which tries to interpret locations should probably be designed to\n   *   ignore those that it doesn't understand, as more types of locations could\n   *   be recorded in the future.\n   */\n  location: SourceCodeInfo_Location[];\n}\n\nexport interface SourceCodeInfo_Location {\n  /**\n   * Identifies which part of the FileDescriptorProto was defined at this\n   * location.\n   *\n   * Each element is a field number or an index.  They form a path from\n   * the root FileDescriptorProto to the place where the definition.  For\n   * example, this path:\n   *   [ 4, 3, 2, 7, 1 ]\n   * refers to:\n   *   file.message_type(3)  // 4, 3\n   *       .field(7)         // 2, 7\n   *       .name()           // 1\n   * This is because FileDescriptorProto.message_type has field number 4:\n   *   repeated DescriptorProto message_type = 4;\n   * and DescriptorProto.field has field number 2:\n   *   repeated FieldDescriptorProto field = 2;\n   * and FieldDescriptorProto.name has field number 1:\n   *   optional string name = 1;\n   *\n   * Thus, the above path gives the location of a field name.  If we removed\n   * the last element:\n   *   [ 4, 3, 2, 7 ]\n   * this path refers to the whole field declaration (from the beginning\n   * of the label to the terminating semicolon).\n   */\n  path: number[];\n  /**\n   * Always has exactly three or four elements: start line, start column,\n   * end line (optional, otherwise assumed same as start line), end column.\n   * These are packed into a single field for efficiency.  Note that line\n   * and column numbers are zero-based -- typically you will want to add\n   * 1 to each before displaying to a user.\n   */\n  span: number[];\n  /**\n   * If this SourceCodeInfo represents a complete declaration, these are any\n   * comments appearing before and after the declaration which appear to be\n   * attached to the declaration.\n   *\n   * A series of line comments appearing on consecutive lines, with no other\n   * tokens appearing on those lines, will be treated as a single comment.\n   *\n   * leading_detached_comments will keep paragraphs of comments that appear\n   * before (but not connected to) the current element. Each paragraph,\n   * separated by empty lines, will be one comment element in the repeated\n   * field.\n   *\n   * Only the comment content is provided; comment markers (e.g. //) are\n   * stripped out.  For block comments, leading whitespace and an asterisk\n   * will be stripped from the beginning of each line other than the first.\n   * Newlines are included in the output.\n   *\n   * Examples:\n   *\n   *   optional int32 foo = 1;  // Comment attached to foo.\n   *   // Comment attached to bar.\n   *   optional int32 bar = 2;\n   *\n   *   optional string baz = 3;\n   *   // Comment attached to baz.\n   *   // Another line attached to baz.\n   *\n   *   // Comment attached to qux.\n   *   //\n   *   // Another line attached to qux.\n   *   optional double qux = 4;\n   *\n   *   // Detached comment for corge. This is not leading or trailing comments\n   *   // to qux or corge because there are blank lines separating it from\n   *   // both.\n   *\n   *   // Detached comment for corge paragraph 2.\n   *\n   *   optional string corge = 5;\n   *   /* Block comment attached\n   *    * to corge.  Leading asterisks\n   *    * will be removed. * /\n   *   /* Block comment attached to\n   *    * grault. * /\n   *   optional int32 grault = 6;\n   *\n   *   // ignored detached comments.\n   */\n  leadingComments?: string | undefined;\n  trailingComments?: string | undefined;\n  leadingDetachedComments: string[];\n}\n\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n */\nexport interface GeneratedCodeInfo {\n  /**\n   * An Annotation connects some span of text in generated code to an element\n   * of its generating .proto file.\n   */\n  annotation: GeneratedCodeInfo_Annotation[];\n}\n\nexport interface GeneratedCodeInfo_Annotation {\n  /**\n   * Identifies the element in the original source .proto file. This field\n   * is formatted the same as SourceCodeInfo.Location.path.\n   */\n  path: number[];\n  /** Identifies the filesystem path to the original source .proto. */\n  sourceFile?:\n    | string\n    | undefined;\n  /**\n   * Identifies the starting offset in bytes in the generated code\n   * that relates to the identified object.\n   */\n  begin?:\n    | number\n    | undefined;\n  /**\n   * Identifies the ending offset in bytes in the generated code that\n   * relates to the identified offset. The end offset should be one past\n   * the last relevant byte (so the length of the text = end - begin).\n   */\n  end?: number | undefined;\n}\n\nfunction createBaseFileDescriptorSet(): FileDescriptorSet {\n  return { file: [] };\n}\n\nexport const FileDescriptorSet: MessageFns<FileDescriptorSet> = {\n  encode(message: FileDescriptorSet, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.file) {\n      FileDescriptorProto.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FileDescriptorSet {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFileDescriptorSet();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.file.push(FileDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<FileDescriptorSet>, I>>(base?: I): FileDescriptorSet {\n    return FileDescriptorSet.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FileDescriptorSet>, I>>(object: I): FileDescriptorSet {\n    const message = createBaseFileDescriptorSet();\n    message.file = object.file?.map((e) => FileDescriptorProto.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseFileDescriptorProto(): FileDescriptorProto {\n  return {\n    name: \"\",\n    package: \"\",\n    dependency: [],\n    publicDependency: [],\n    weakDependency: [],\n    messageType: [],\n    enumType: [],\n    service: [],\n    extension: [],\n    options: undefined,\n    sourceCodeInfo: undefined,\n    syntax: \"\",\n  };\n}\n\nexport const FileDescriptorProto: MessageFns<FileDescriptorProto> = {\n  encode(message: FileDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.package !== undefined && message.package !== \"\") {\n      writer.uint32(18).string(message.package);\n    }\n    for (const v of message.dependency) {\n      writer.uint32(26).string(v!);\n    }\n    writer.uint32(82).fork();\n    for (const v of message.publicDependency) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(90).fork();\n    for (const v of message.weakDependency) {\n      writer.int32(v);\n    }\n    writer.join();\n    for (const v of message.messageType) {\n      DescriptorProto.encode(v!, writer.uint32(34).fork()).join();\n    }\n    for (const v of message.enumType) {\n      EnumDescriptorProto.encode(v!, writer.uint32(42).fork()).join();\n    }\n    for (const v of message.service) {\n      ServiceDescriptorProto.encode(v!, writer.uint32(50).fork()).join();\n    }\n    for (const v of message.extension) {\n      FieldDescriptorProto.encode(v!, writer.uint32(58).fork()).join();\n    }\n    if (message.options !== undefined) {\n      FileOptions.encode(message.options, writer.uint32(66).fork()).join();\n    }\n    if (message.sourceCodeInfo !== undefined) {\n      SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(74).fork()).join();\n    }\n    if (message.syntax !== undefined && message.syntax !== \"\") {\n      writer.uint32(98).string(message.syntax);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FileDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFileDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.package = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.dependency.push(reader.string());\n          continue;\n        }\n        case 10: {\n          if (tag === 80) {\n            message.publicDependency.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 82) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.publicDependency.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 11: {\n          if (tag === 88) {\n            message.weakDependency.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 90) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.weakDependency.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.messageType.push(DescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.enumType.push(EnumDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.service.push(ServiceDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.extension.push(FieldDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.options = FileOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 9: {\n          if (tag !== 74) {\n            break;\n          }\n\n          message.sourceCodeInfo = SourceCodeInfo.decode(reader, reader.uint32());\n          continue;\n        }\n        case 12: {\n          if (tag !== 98) {\n            break;\n          }\n\n          message.syntax = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<FileDescriptorProto>, I>>(base?: I): FileDescriptorProto {\n    return FileDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FileDescriptorProto>, I>>(object: I): FileDescriptorProto {\n    const message = createBaseFileDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.package = object.package ?? \"\";\n    message.dependency = object.dependency?.map((e) => e) || [];\n    message.publicDependency = object.publicDependency?.map((e) => e) || [];\n    message.weakDependency = object.weakDependency?.map((e) => e) || [];\n    message.messageType = object.messageType?.map((e) => DescriptorProto.fromPartial(e)) || [];\n    message.enumType = object.enumType?.map((e) => EnumDescriptorProto.fromPartial(e)) || [];\n    message.service = object.service?.map((e) => ServiceDescriptorProto.fromPartial(e)) || [];\n    message.extension = object.extension?.map((e) => FieldDescriptorProto.fromPartial(e)) || [];\n    message.options = (object.options !== undefined && object.options !== null)\n      ? FileOptions.fromPartial(object.options)\n      : undefined;\n    message.sourceCodeInfo = (object.sourceCodeInfo !== undefined && object.sourceCodeInfo !== null)\n      ? SourceCodeInfo.fromPartial(object.sourceCodeInfo)\n      : undefined;\n    message.syntax = object.syntax ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDescriptorProto(): DescriptorProto {\n  return {\n    name: \"\",\n    field: [],\n    extension: [],\n    nestedType: [],\n    enumType: [],\n    extensionRange: [],\n    oneofDecl: [],\n    options: undefined,\n    reservedRange: [],\n    reservedName: [],\n  };\n}\n\nexport const DescriptorProto: MessageFns<DescriptorProto> = {\n  encode(message: DescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.field) {\n      FieldDescriptorProto.encode(v!, writer.uint32(18).fork()).join();\n    }\n    for (const v of message.extension) {\n      FieldDescriptorProto.encode(v!, writer.uint32(50).fork()).join();\n    }\n    for (const v of message.nestedType) {\n      DescriptorProto.encode(v!, writer.uint32(26).fork()).join();\n    }\n    for (const v of message.enumType) {\n      EnumDescriptorProto.encode(v!, writer.uint32(34).fork()).join();\n    }\n    for (const v of message.extensionRange) {\n      DescriptorProto_ExtensionRange.encode(v!, writer.uint32(42).fork()).join();\n    }\n    for (const v of message.oneofDecl) {\n      OneofDescriptorProto.encode(v!, writer.uint32(66).fork()).join();\n    }\n    if (message.options !== undefined) {\n      MessageOptions.encode(message.options, writer.uint32(58).fork()).join();\n    }\n    for (const v of message.reservedRange) {\n      DescriptorProto_ReservedRange.encode(v!, writer.uint32(74).fork()).join();\n    }\n    for (const v of message.reservedName) {\n      writer.uint32(82).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.field.push(FieldDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.extension.push(FieldDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.nestedType.push(DescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.enumType.push(EnumDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.extensionRange.push(DescriptorProto_ExtensionRange.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.oneofDecl.push(OneofDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.options = MessageOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 9: {\n          if (tag !== 74) {\n            break;\n          }\n\n          message.reservedRange.push(DescriptorProto_ReservedRange.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 10: {\n          if (tag !== 82) {\n            break;\n          }\n\n          message.reservedName.push(reader.string());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<DescriptorProto>, I>>(base?: I): DescriptorProto {\n    return DescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DescriptorProto>, I>>(object: I): DescriptorProto {\n    const message = createBaseDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.field = object.field?.map((e) => FieldDescriptorProto.fromPartial(e)) || [];\n    message.extension = object.extension?.map((e) => FieldDescriptorProto.fromPartial(e)) || [];\n    message.nestedType = object.nestedType?.map((e) => DescriptorProto.fromPartial(e)) || [];\n    message.enumType = object.enumType?.map((e) => EnumDescriptorProto.fromPartial(e)) || [];\n    message.extensionRange = object.extensionRange?.map((e) => DescriptorProto_ExtensionRange.fromPartial(e)) || [];\n    message.oneofDecl = object.oneofDecl?.map((e) => OneofDescriptorProto.fromPartial(e)) || [];\n    message.options = (object.options !== undefined && object.options !== null)\n      ? MessageOptions.fromPartial(object.options)\n      : undefined;\n    message.reservedRange = object.reservedRange?.map((e) => DescriptorProto_ReservedRange.fromPartial(e)) || [];\n    message.reservedName = object.reservedName?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseDescriptorProto_ExtensionRange(): DescriptorProto_ExtensionRange {\n  return { start: 0, end: 0, options: undefined };\n}\n\nexport const DescriptorProto_ExtensionRange: MessageFns<DescriptorProto_ExtensionRange> = {\n  encode(message: DescriptorProto_ExtensionRange, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.start !== undefined && message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== undefined && message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    if (message.options !== undefined) {\n      ExtensionRangeOptions.encode(message.options, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DescriptorProto_ExtensionRange {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDescriptorProto_ExtensionRange();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.start = reader.int32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.end = reader.int32();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.options = ExtensionRangeOptions.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<DescriptorProto_ExtensionRange>, I>>(base?: I): DescriptorProto_ExtensionRange {\n    return DescriptorProto_ExtensionRange.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DescriptorProto_ExtensionRange>, I>>(\n    object: I,\n  ): DescriptorProto_ExtensionRange {\n    const message = createBaseDescriptorProto_ExtensionRange();\n    message.start = object.start ?? 0;\n    message.end = object.end ?? 0;\n    message.options = (object.options !== undefined && object.options !== null)\n      ? ExtensionRangeOptions.fromPartial(object.options)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseDescriptorProto_ReservedRange(): DescriptorProto_ReservedRange {\n  return { start: 0, end: 0 };\n}\n\nexport const DescriptorProto_ReservedRange: MessageFns<DescriptorProto_ReservedRange> = {\n  encode(message: DescriptorProto_ReservedRange, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.start !== undefined && message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== undefined && message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DescriptorProto_ReservedRange {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDescriptorProto_ReservedRange();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.start = reader.int32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.end = reader.int32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<DescriptorProto_ReservedRange>, I>>(base?: I): DescriptorProto_ReservedRange {\n    return DescriptorProto_ReservedRange.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DescriptorProto_ReservedRange>, I>>(\n    object: I,\n  ): DescriptorProto_ReservedRange {\n    const message = createBaseDescriptorProto_ReservedRange();\n    message.start = object.start ?? 0;\n    message.end = object.end ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseExtensionRangeOptions(): ExtensionRangeOptions {\n  return { uninterpretedOption: [] };\n}\n\nexport const ExtensionRangeOptions: MessageFns<ExtensionRangeOptions> = {\n  encode(message: ExtensionRangeOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ExtensionRangeOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseExtensionRangeOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<ExtensionRangeOptions>, I>>(base?: I): ExtensionRangeOptions {\n    return ExtensionRangeOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ExtensionRangeOptions>, I>>(object: I): ExtensionRangeOptions {\n    const message = createBaseExtensionRangeOptions();\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseFieldDescriptorProto(): FieldDescriptorProto {\n  return {\n    name: \"\",\n    number: 0,\n    label: 1,\n    type: 1,\n    typeName: \"\",\n    extendee: \"\",\n    defaultValue: \"\",\n    oneofIndex: 0,\n    jsonName: \"\",\n    options: undefined,\n    proto3Optional: false,\n  };\n}\n\nexport const FieldDescriptorProto: MessageFns<FieldDescriptorProto> = {\n  encode(message: FieldDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.number !== undefined && message.number !== 0) {\n      writer.uint32(24).int32(message.number);\n    }\n    if (message.label !== undefined && message.label !== 1) {\n      writer.uint32(32).int32(message.label);\n    }\n    if (message.type !== undefined && message.type !== 1) {\n      writer.uint32(40).int32(message.type);\n    }\n    if (message.typeName !== undefined && message.typeName !== \"\") {\n      writer.uint32(50).string(message.typeName);\n    }\n    if (message.extendee !== undefined && message.extendee !== \"\") {\n      writer.uint32(18).string(message.extendee);\n    }\n    if (message.defaultValue !== undefined && message.defaultValue !== \"\") {\n      writer.uint32(58).string(message.defaultValue);\n    }\n    if (message.oneofIndex !== undefined && message.oneofIndex !== 0) {\n      writer.uint32(72).int32(message.oneofIndex);\n    }\n    if (message.jsonName !== undefined && message.jsonName !== \"\") {\n      writer.uint32(82).string(message.jsonName);\n    }\n    if (message.options !== undefined) {\n      FieldOptions.encode(message.options, writer.uint32(66).fork()).join();\n    }\n    if (message.proto3Optional !== undefined && message.proto3Optional !== false) {\n      writer.uint32(136).bool(message.proto3Optional);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FieldDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFieldDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 24) {\n            break;\n          }\n\n          message.number = reader.int32();\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.label = reader.int32() as any;\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.type = reader.int32() as any;\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.typeName = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.extendee = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.defaultValue = reader.string();\n          continue;\n        }\n        case 9: {\n          if (tag !== 72) {\n            break;\n          }\n\n          message.oneofIndex = reader.int32();\n          continue;\n        }\n        case 10: {\n          if (tag !== 82) {\n            break;\n          }\n\n          message.jsonName = reader.string();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.options = FieldOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 17: {\n          if (tag !== 136) {\n            break;\n          }\n\n          message.proto3Optional = reader.bool();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<FieldDescriptorProto>, I>>(base?: I): FieldDescriptorProto {\n    return FieldDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FieldDescriptorProto>, I>>(object: I): FieldDescriptorProto {\n    const message = createBaseFieldDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.number = object.number ?? 0;\n    message.label = object.label ?? 1;\n    message.type = object.type ?? 1;\n    message.typeName = object.typeName ?? \"\";\n    message.extendee = object.extendee ?? \"\";\n    message.defaultValue = object.defaultValue ?? \"\";\n    message.oneofIndex = object.oneofIndex ?? 0;\n    message.jsonName = object.jsonName ?? \"\";\n    message.options = (object.options !== undefined && object.options !== null)\n      ? FieldOptions.fromPartial(object.options)\n      : undefined;\n    message.proto3Optional = object.proto3Optional ?? false;\n    return message;\n  },\n};\n\nfunction createBaseOneofDescriptorProto(): OneofDescriptorProto {\n  return { name: \"\", options: undefined };\n}\n\nexport const OneofDescriptorProto: MessageFns<OneofDescriptorProto> = {\n  encode(message: OneofDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.options !== undefined) {\n      OneofOptions.encode(message.options, writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): OneofDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOneofDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.options = OneofOptions.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<OneofDescriptorProto>, I>>(base?: I): OneofDescriptorProto {\n    return OneofDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<OneofDescriptorProto>, I>>(object: I): OneofDescriptorProto {\n    const message = createBaseOneofDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.options = (object.options !== undefined && object.options !== null)\n      ? OneofOptions.fromPartial(object.options)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseEnumDescriptorProto(): EnumDescriptorProto {\n  return { name: \"\", value: [], options: undefined, reservedRange: [], reservedName: [] };\n}\n\nexport const EnumDescriptorProto: MessageFns<EnumDescriptorProto> = {\n  encode(message: EnumDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.value) {\n      EnumValueDescriptorProto.encode(v!, writer.uint32(18).fork()).join();\n    }\n    if (message.options !== undefined) {\n      EnumOptions.encode(message.options, writer.uint32(26).fork()).join();\n    }\n    for (const v of message.reservedRange) {\n      EnumDescriptorProto_EnumReservedRange.encode(v!, writer.uint32(34).fork()).join();\n    }\n    for (const v of message.reservedName) {\n      writer.uint32(42).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): EnumDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnumDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.value.push(EnumValueDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.options = EnumOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.reservedRange.push(EnumDescriptorProto_EnumReservedRange.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.reservedName.push(reader.string());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<EnumDescriptorProto>, I>>(base?: I): EnumDescriptorProto {\n    return EnumDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<EnumDescriptorProto>, I>>(object: I): EnumDescriptorProto {\n    const message = createBaseEnumDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.value = object.value?.map((e) => EnumValueDescriptorProto.fromPartial(e)) || [];\n    message.options = (object.options !== undefined && object.options !== null)\n      ? EnumOptions.fromPartial(object.options)\n      : undefined;\n    message.reservedRange = object.reservedRange?.map((e) => EnumDescriptorProto_EnumReservedRange.fromPartial(e)) ||\n      [];\n    message.reservedName = object.reservedName?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseEnumDescriptorProto_EnumReservedRange(): EnumDescriptorProto_EnumReservedRange {\n  return { start: 0, end: 0 };\n}\n\nexport const EnumDescriptorProto_EnumReservedRange: MessageFns<EnumDescriptorProto_EnumReservedRange> = {\n  encode(message: EnumDescriptorProto_EnumReservedRange, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.start !== undefined && message.start !== 0) {\n      writer.uint32(8).int32(message.start);\n    }\n    if (message.end !== undefined && message.end !== 0) {\n      writer.uint32(16).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): EnumDescriptorProto_EnumReservedRange {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnumDescriptorProto_EnumReservedRange();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.start = reader.int32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.end = reader.int32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<EnumDescriptorProto_EnumReservedRange>, I>>(\n    base?: I,\n  ): EnumDescriptorProto_EnumReservedRange {\n    return EnumDescriptorProto_EnumReservedRange.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<EnumDescriptorProto_EnumReservedRange>, I>>(\n    object: I,\n  ): EnumDescriptorProto_EnumReservedRange {\n    const message = createBaseEnumDescriptorProto_EnumReservedRange();\n    message.start = object.start ?? 0;\n    message.end = object.end ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseEnumValueDescriptorProto(): EnumValueDescriptorProto {\n  return { name: \"\", number: 0, options: undefined };\n}\n\nexport const EnumValueDescriptorProto: MessageFns<EnumValueDescriptorProto> = {\n  encode(message: EnumValueDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.number !== undefined && message.number !== 0) {\n      writer.uint32(16).int32(message.number);\n    }\n    if (message.options !== undefined) {\n      EnumValueOptions.encode(message.options, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): EnumValueDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnumValueDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.number = reader.int32();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.options = EnumValueOptions.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<EnumValueDescriptorProto>, I>>(base?: I): EnumValueDescriptorProto {\n    return EnumValueDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<EnumValueDescriptorProto>, I>>(object: I): EnumValueDescriptorProto {\n    const message = createBaseEnumValueDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.number = object.number ?? 0;\n    message.options = (object.options !== undefined && object.options !== null)\n      ? EnumValueOptions.fromPartial(object.options)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseServiceDescriptorProto(): ServiceDescriptorProto {\n  return { name: \"\", method: [], options: undefined };\n}\n\nexport const ServiceDescriptorProto: MessageFns<ServiceDescriptorProto> = {\n  encode(message: ServiceDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    for (const v of message.method) {\n      MethodDescriptorProto.encode(v!, writer.uint32(18).fork()).join();\n    }\n    if (message.options !== undefined) {\n      ServiceOptions.encode(message.options, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ServiceDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseServiceDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.method.push(MethodDescriptorProto.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.options = ServiceOptions.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<ServiceDescriptorProto>, I>>(base?: I): ServiceDescriptorProto {\n    return ServiceDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ServiceDescriptorProto>, I>>(object: I): ServiceDescriptorProto {\n    const message = createBaseServiceDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.method = object.method?.map((e) => MethodDescriptorProto.fromPartial(e)) || [];\n    message.options = (object.options !== undefined && object.options !== null)\n      ? ServiceOptions.fromPartial(object.options)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseMethodDescriptorProto(): MethodDescriptorProto {\n  return {\n    name: \"\",\n    inputType: \"\",\n    outputType: \"\",\n    options: undefined,\n    clientStreaming: false,\n    serverStreaming: false,\n  };\n}\n\nexport const MethodDescriptorProto: MessageFns<MethodDescriptorProto> = {\n  encode(message: MethodDescriptorProto, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== undefined && message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.inputType !== undefined && message.inputType !== \"\") {\n      writer.uint32(18).string(message.inputType);\n    }\n    if (message.outputType !== undefined && message.outputType !== \"\") {\n      writer.uint32(26).string(message.outputType);\n    }\n    if (message.options !== undefined) {\n      MethodOptions.encode(message.options, writer.uint32(34).fork()).join();\n    }\n    if (message.clientStreaming !== undefined && message.clientStreaming !== false) {\n      writer.uint32(40).bool(message.clientStreaming);\n    }\n    if (message.serverStreaming !== undefined && message.serverStreaming !== false) {\n      writer.uint32(48).bool(message.serverStreaming);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): MethodDescriptorProto {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMethodDescriptorProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.inputType = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.outputType = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.options = MethodOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.clientStreaming = reader.bool();\n          continue;\n        }\n        case 6: {\n          if (tag !== 48) {\n            break;\n          }\n\n          message.serverStreaming = reader.bool();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<MethodDescriptorProto>, I>>(base?: I): MethodDescriptorProto {\n    return MethodDescriptorProto.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MethodDescriptorProto>, I>>(object: I): MethodDescriptorProto {\n    const message = createBaseMethodDescriptorProto();\n    message.name = object.name ?? \"\";\n    message.inputType = object.inputType ?? \"\";\n    message.outputType = object.outputType ?? \"\";\n    message.options = (object.options !== undefined && object.options !== null)\n      ? MethodOptions.fromPartial(object.options)\n      : undefined;\n    message.clientStreaming = object.clientStreaming ?? false;\n    message.serverStreaming = object.serverStreaming ?? false;\n    return message;\n  },\n};\n\nfunction createBaseFileOptions(): FileOptions {\n  return {\n    javaPackage: \"\",\n    javaOuterClassname: \"\",\n    javaMultipleFiles: false,\n    javaGenerateEqualsAndHash: false,\n    javaStringCheckUtf8: false,\n    optimizeFor: 1,\n    goPackage: \"\",\n    ccGenericServices: false,\n    javaGenericServices: false,\n    pyGenericServices: false,\n    phpGenericServices: false,\n    deprecated: false,\n    ccEnableArenas: true,\n    objcClassPrefix: \"\",\n    csharpNamespace: \"\",\n    swiftPrefix: \"\",\n    phpClassPrefix: \"\",\n    phpNamespace: \"\",\n    phpMetadataNamespace: \"\",\n    rubyPackage: \"\",\n    uninterpretedOption: [],\n  };\n}\n\nexport const FileOptions: MessageFns<FileOptions> = {\n  encode(message: FileOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.javaPackage !== undefined && message.javaPackage !== \"\") {\n      writer.uint32(10).string(message.javaPackage);\n    }\n    if (message.javaOuterClassname !== undefined && message.javaOuterClassname !== \"\") {\n      writer.uint32(66).string(message.javaOuterClassname);\n    }\n    if (message.javaMultipleFiles !== undefined && message.javaMultipleFiles !== false) {\n      writer.uint32(80).bool(message.javaMultipleFiles);\n    }\n    if (message.javaGenerateEqualsAndHash !== undefined && message.javaGenerateEqualsAndHash !== false) {\n      writer.uint32(160).bool(message.javaGenerateEqualsAndHash);\n    }\n    if (message.javaStringCheckUtf8 !== undefined && message.javaStringCheckUtf8 !== false) {\n      writer.uint32(216).bool(message.javaStringCheckUtf8);\n    }\n    if (message.optimizeFor !== undefined && message.optimizeFor !== 1) {\n      writer.uint32(72).int32(message.optimizeFor);\n    }\n    if (message.goPackage !== undefined && message.goPackage !== \"\") {\n      writer.uint32(90).string(message.goPackage);\n    }\n    if (message.ccGenericServices !== undefined && message.ccGenericServices !== false) {\n      writer.uint32(128).bool(message.ccGenericServices);\n    }\n    if (message.javaGenericServices !== undefined && message.javaGenericServices !== false) {\n      writer.uint32(136).bool(message.javaGenericServices);\n    }\n    if (message.pyGenericServices !== undefined && message.pyGenericServices !== false) {\n      writer.uint32(144).bool(message.pyGenericServices);\n    }\n    if (message.phpGenericServices !== undefined && message.phpGenericServices !== false) {\n      writer.uint32(336).bool(message.phpGenericServices);\n    }\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(184).bool(message.deprecated);\n    }\n    if (message.ccEnableArenas !== undefined && message.ccEnableArenas !== true) {\n      writer.uint32(248).bool(message.ccEnableArenas);\n    }\n    if (message.objcClassPrefix !== undefined && message.objcClassPrefix !== \"\") {\n      writer.uint32(290).string(message.objcClassPrefix);\n    }\n    if (message.csharpNamespace !== undefined && message.csharpNamespace !== \"\") {\n      writer.uint32(298).string(message.csharpNamespace);\n    }\n    if (message.swiftPrefix !== undefined && message.swiftPrefix !== \"\") {\n      writer.uint32(314).string(message.swiftPrefix);\n    }\n    if (message.phpClassPrefix !== undefined && message.phpClassPrefix !== \"\") {\n      writer.uint32(322).string(message.phpClassPrefix);\n    }\n    if (message.phpNamespace !== undefined && message.phpNamespace !== \"\") {\n      writer.uint32(330).string(message.phpNamespace);\n    }\n    if (message.phpMetadataNamespace !== undefined && message.phpMetadataNamespace !== \"\") {\n      writer.uint32(354).string(message.phpMetadataNamespace);\n    }\n    if (message.rubyPackage !== undefined && message.rubyPackage !== \"\") {\n      writer.uint32(362).string(message.rubyPackage);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FileOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFileOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.javaPackage = reader.string();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.javaOuterClassname = reader.string();\n          continue;\n        }\n        case 10: {\n          if (tag !== 80) {\n            break;\n          }\n\n          message.javaMultipleFiles = reader.bool();\n          continue;\n        }\n        case 20: {\n          if (tag !== 160) {\n            break;\n          }\n\n          message.javaGenerateEqualsAndHash = reader.bool();\n          continue;\n        }\n        case 27: {\n          if (tag !== 216) {\n            break;\n          }\n\n          message.javaStringCheckUtf8 = reader.bool();\n          continue;\n        }\n        case 9: {\n          if (tag !== 72) {\n            break;\n          }\n\n          message.optimizeFor = reader.int32() as any;\n          continue;\n        }\n        case 11: {\n          if (tag !== 90) {\n            break;\n          }\n\n          message.goPackage = reader.string();\n          continue;\n        }\n        case 16: {\n          if (tag !== 128) {\n            break;\n          }\n\n          message.ccGenericServices = reader.bool();\n          continue;\n        }\n        case 17: {\n          if (tag !== 136) {\n            break;\n          }\n\n          message.javaGenericServices = reader.bool();\n          continue;\n        }\n        case 18: {\n          if (tag !== 144) {\n            break;\n          }\n\n          message.pyGenericServices = reader.bool();\n          continue;\n        }\n        case 42: {\n          if (tag !== 336) {\n            break;\n          }\n\n          message.phpGenericServices = reader.bool();\n          continue;\n        }\n        case 23: {\n          if (tag !== 184) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 31: {\n          if (tag !== 248) {\n            break;\n          }\n\n          message.ccEnableArenas = reader.bool();\n          continue;\n        }\n        case 36: {\n          if (tag !== 290) {\n            break;\n          }\n\n          message.objcClassPrefix = reader.string();\n          continue;\n        }\n        case 37: {\n          if (tag !== 298) {\n            break;\n          }\n\n          message.csharpNamespace = reader.string();\n          continue;\n        }\n        case 39: {\n          if (tag !== 314) {\n            break;\n          }\n\n          message.swiftPrefix = reader.string();\n          continue;\n        }\n        case 40: {\n          if (tag !== 322) {\n            break;\n          }\n\n          message.phpClassPrefix = reader.string();\n          continue;\n        }\n        case 41: {\n          if (tag !== 330) {\n            break;\n          }\n\n          message.phpNamespace = reader.string();\n          continue;\n        }\n        case 44: {\n          if (tag !== 354) {\n            break;\n          }\n\n          message.phpMetadataNamespace = reader.string();\n          continue;\n        }\n        case 45: {\n          if (tag !== 362) {\n            break;\n          }\n\n          message.rubyPackage = reader.string();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<FileOptions>, I>>(base?: I): FileOptions {\n    return FileOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FileOptions>, I>>(object: I): FileOptions {\n    const message = createBaseFileOptions();\n    message.javaPackage = object.javaPackage ?? \"\";\n    message.javaOuterClassname = object.javaOuterClassname ?? \"\";\n    message.javaMultipleFiles = object.javaMultipleFiles ?? false;\n    message.javaGenerateEqualsAndHash = object.javaGenerateEqualsAndHash ?? false;\n    message.javaStringCheckUtf8 = object.javaStringCheckUtf8 ?? false;\n    message.optimizeFor = object.optimizeFor ?? 1;\n    message.goPackage = object.goPackage ?? \"\";\n    message.ccGenericServices = object.ccGenericServices ?? false;\n    message.javaGenericServices = object.javaGenericServices ?? false;\n    message.pyGenericServices = object.pyGenericServices ?? false;\n    message.phpGenericServices = object.phpGenericServices ?? false;\n    message.deprecated = object.deprecated ?? false;\n    message.ccEnableArenas = object.ccEnableArenas ?? true;\n    message.objcClassPrefix = object.objcClassPrefix ?? \"\";\n    message.csharpNamespace = object.csharpNamespace ?? \"\";\n    message.swiftPrefix = object.swiftPrefix ?? \"\";\n    message.phpClassPrefix = object.phpClassPrefix ?? \"\";\n    message.phpNamespace = object.phpNamespace ?? \"\";\n    message.phpMetadataNamespace = object.phpMetadataNamespace ?? \"\";\n    message.rubyPackage = object.rubyPackage ?? \"\";\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseMessageOptions(): MessageOptions {\n  return {\n    messageSetWireFormat: false,\n    noStandardDescriptorAccessor: false,\n    deprecated: false,\n    mapEntry: false,\n    uninterpretedOption: [],\n  };\n}\n\nexport const MessageOptions: MessageFns<MessageOptions> = {\n  encode(message: MessageOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.messageSetWireFormat !== undefined && message.messageSetWireFormat !== false) {\n      writer.uint32(8).bool(message.messageSetWireFormat);\n    }\n    if (message.noStandardDescriptorAccessor !== undefined && message.noStandardDescriptorAccessor !== false) {\n      writer.uint32(16).bool(message.noStandardDescriptorAccessor);\n    }\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    if (message.mapEntry !== undefined && message.mapEntry !== false) {\n      writer.uint32(56).bool(message.mapEntry);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): MessageOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMessageOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.messageSetWireFormat = reader.bool();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.noStandardDescriptorAccessor = reader.bool();\n          continue;\n        }\n        case 3: {\n          if (tag !== 24) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 7: {\n          if (tag !== 56) {\n            break;\n          }\n\n          message.mapEntry = reader.bool();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<MessageOptions>, I>>(base?: I): MessageOptions {\n    return MessageOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MessageOptions>, I>>(object: I): MessageOptions {\n    const message = createBaseMessageOptions();\n    message.messageSetWireFormat = object.messageSetWireFormat ?? false;\n    message.noStandardDescriptorAccessor = object.noStandardDescriptorAccessor ?? false;\n    message.deprecated = object.deprecated ?? false;\n    message.mapEntry = object.mapEntry ?? false;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseFieldOptions(): FieldOptions {\n  return { ctype: 0, packed: false, jstype: 0, lazy: false, deprecated: false, weak: false, uninterpretedOption: [] };\n}\n\nexport const FieldOptions: MessageFns<FieldOptions> = {\n  encode(message: FieldOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.ctype !== undefined && message.ctype !== 0) {\n      writer.uint32(8).int32(message.ctype);\n    }\n    if (message.packed !== undefined && message.packed !== false) {\n      writer.uint32(16).bool(message.packed);\n    }\n    if (message.jstype !== undefined && message.jstype !== 0) {\n      writer.uint32(48).int32(message.jstype);\n    }\n    if (message.lazy !== undefined && message.lazy !== false) {\n      writer.uint32(40).bool(message.lazy);\n    }\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    if (message.weak !== undefined && message.weak !== false) {\n      writer.uint32(80).bool(message.weak);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FieldOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFieldOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.ctype = reader.int32() as any;\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.packed = reader.bool();\n          continue;\n        }\n        case 6: {\n          if (tag !== 48) {\n            break;\n          }\n\n          message.jstype = reader.int32() as any;\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.lazy = reader.bool();\n          continue;\n        }\n        case 3: {\n          if (tag !== 24) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 10: {\n          if (tag !== 80) {\n            break;\n          }\n\n          message.weak = reader.bool();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<FieldOptions>, I>>(base?: I): FieldOptions {\n    return FieldOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FieldOptions>, I>>(object: I): FieldOptions {\n    const message = createBaseFieldOptions();\n    message.ctype = object.ctype ?? 0;\n    message.packed = object.packed ?? false;\n    message.jstype = object.jstype ?? 0;\n    message.lazy = object.lazy ?? false;\n    message.deprecated = object.deprecated ?? false;\n    message.weak = object.weak ?? false;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseOneofOptions(): OneofOptions {\n  return { uninterpretedOption: [] };\n}\n\nexport const OneofOptions: MessageFns<OneofOptions> = {\n  encode(message: OneofOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): OneofOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOneofOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<OneofOptions>, I>>(base?: I): OneofOptions {\n    return OneofOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<OneofOptions>, I>>(object: I): OneofOptions {\n    const message = createBaseOneofOptions();\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseEnumOptions(): EnumOptions {\n  return { allowAlias: false, deprecated: false, uninterpretedOption: [] };\n}\n\nexport const EnumOptions: MessageFns<EnumOptions> = {\n  encode(message: EnumOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.allowAlias !== undefined && message.allowAlias !== false) {\n      writer.uint32(16).bool(message.allowAlias);\n    }\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(24).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): EnumOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnumOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.allowAlias = reader.bool();\n          continue;\n        }\n        case 3: {\n          if (tag !== 24) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<EnumOptions>, I>>(base?: I): EnumOptions {\n    return EnumOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<EnumOptions>, I>>(object: I): EnumOptions {\n    const message = createBaseEnumOptions();\n    message.allowAlias = object.allowAlias ?? false;\n    message.deprecated = object.deprecated ?? false;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseEnumValueOptions(): EnumValueOptions {\n  return { deprecated: false, uninterpretedOption: [] };\n}\n\nexport const EnumValueOptions: MessageFns<EnumValueOptions> = {\n  encode(message: EnumValueOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(8).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): EnumValueOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEnumValueOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<EnumValueOptions>, I>>(base?: I): EnumValueOptions {\n    return EnumValueOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<EnumValueOptions>, I>>(object: I): EnumValueOptions {\n    const message = createBaseEnumValueOptions();\n    message.deprecated = object.deprecated ?? false;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseServiceOptions(): ServiceOptions {\n  return { deprecated: false, uninterpretedOption: [] };\n}\n\nexport const ServiceOptions: MessageFns<ServiceOptions> = {\n  encode(message: ServiceOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(264).bool(message.deprecated);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ServiceOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseServiceOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 33: {\n          if (tag !== 264) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<ServiceOptions>, I>>(base?: I): ServiceOptions {\n    return ServiceOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ServiceOptions>, I>>(object: I): ServiceOptions {\n    const message = createBaseServiceOptions();\n    message.deprecated = object.deprecated ?? false;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseMethodOptions(): MethodOptions {\n  return { deprecated: false, idempotencyLevel: 0, uninterpretedOption: [] };\n}\n\nexport const MethodOptions: MessageFns<MethodOptions> = {\n  encode(message: MethodOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.deprecated !== undefined && message.deprecated !== false) {\n      writer.uint32(264).bool(message.deprecated);\n    }\n    if (message.idempotencyLevel !== undefined && message.idempotencyLevel !== 0) {\n      writer.uint32(272).int32(message.idempotencyLevel);\n    }\n    for (const v of message.uninterpretedOption) {\n      UninterpretedOption.encode(v!, writer.uint32(7994).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): MethodOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMethodOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 33: {\n          if (tag !== 264) {\n            break;\n          }\n\n          message.deprecated = reader.bool();\n          continue;\n        }\n        case 34: {\n          if (tag !== 272) {\n            break;\n          }\n\n          message.idempotencyLevel = reader.int32() as any;\n          continue;\n        }\n        case 999: {\n          if (tag !== 7994) {\n            break;\n          }\n\n          message.uninterpretedOption.push(UninterpretedOption.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<MethodOptions>, I>>(base?: I): MethodOptions {\n    return MethodOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MethodOptions>, I>>(object: I): MethodOptions {\n    const message = createBaseMethodOptions();\n    message.deprecated = object.deprecated ?? false;\n    message.idempotencyLevel = object.idempotencyLevel ?? 0;\n    message.uninterpretedOption = object.uninterpretedOption?.map((e) => UninterpretedOption.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseUninterpretedOption(): UninterpretedOption {\n  return {\n    name: [],\n    identifierValue: \"\",\n    positiveIntValue: \"0\",\n    negativeIntValue: \"0\",\n    doubleValue: 0,\n    stringValue: new Uint8Array(0),\n    aggregateValue: \"\",\n  };\n}\n\nexport const UninterpretedOption: MessageFns<UninterpretedOption> = {\n  encode(message: UninterpretedOption, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.name) {\n      UninterpretedOption_NamePart.encode(v!, writer.uint32(18).fork()).join();\n    }\n    if (message.identifierValue !== undefined && message.identifierValue !== \"\") {\n      writer.uint32(26).string(message.identifierValue);\n    }\n    if (message.positiveIntValue !== undefined && message.positiveIntValue !== \"0\") {\n      writer.uint32(32).uint64(message.positiveIntValue);\n    }\n    if (message.negativeIntValue !== undefined && message.negativeIntValue !== \"0\") {\n      writer.uint32(40).int64(message.negativeIntValue);\n    }\n    if (message.doubleValue !== undefined && message.doubleValue !== 0) {\n      writer.uint32(49).double(message.doubleValue);\n    }\n    if (message.stringValue !== undefined && message.stringValue.length !== 0) {\n      writer.uint32(58).bytes(message.stringValue);\n    }\n    if (message.aggregateValue !== undefined && message.aggregateValue !== \"\") {\n      writer.uint32(66).string(message.aggregateValue);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UninterpretedOption {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUninterpretedOption();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name.push(UninterpretedOption_NamePart.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.identifierValue = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.positiveIntValue = reader.uint64().toString();\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.negativeIntValue = reader.int64().toString();\n          continue;\n        }\n        case 6: {\n          if (tag !== 49) {\n            break;\n          }\n\n          message.doubleValue = reader.double();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.stringValue = reader.bytes();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.aggregateValue = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<UninterpretedOption>, I>>(base?: I): UninterpretedOption {\n    return UninterpretedOption.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UninterpretedOption>, I>>(object: I): UninterpretedOption {\n    const message = createBaseUninterpretedOption();\n    message.name = object.name?.map((e) => UninterpretedOption_NamePart.fromPartial(e)) || [];\n    message.identifierValue = object.identifierValue ?? \"\";\n    message.positiveIntValue = object.positiveIntValue ?? \"0\";\n    message.negativeIntValue = object.negativeIntValue ?? \"0\";\n    message.doubleValue = object.doubleValue ?? 0;\n    message.stringValue = object.stringValue ?? new Uint8Array(0);\n    message.aggregateValue = object.aggregateValue ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseUninterpretedOption_NamePart(): UninterpretedOption_NamePart {\n  return { namePart: \"\", isExtension: false };\n}\n\nexport const UninterpretedOption_NamePart: MessageFns<UninterpretedOption_NamePart> = {\n  encode(message: UninterpretedOption_NamePart, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.namePart !== \"\") {\n      writer.uint32(10).string(message.namePart);\n    }\n    if (message.isExtension !== false) {\n      writer.uint32(16).bool(message.isExtension);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UninterpretedOption_NamePart {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUninterpretedOption_NamePart();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.namePart = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.isExtension = reader.bool();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<UninterpretedOption_NamePart>, I>>(base?: I): UninterpretedOption_NamePart {\n    return UninterpretedOption_NamePart.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UninterpretedOption_NamePart>, I>>(object: I): UninterpretedOption_NamePart {\n    const message = createBaseUninterpretedOption_NamePart();\n    message.namePart = object.namePart ?? \"\";\n    message.isExtension = object.isExtension ?? false;\n    return message;\n  },\n};\n\nfunction createBaseSourceCodeInfo(): SourceCodeInfo {\n  return { location: [] };\n}\n\nexport const SourceCodeInfo: MessageFns<SourceCodeInfo> = {\n  encode(message: SourceCodeInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.location) {\n      SourceCodeInfo_Location.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SourceCodeInfo {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSourceCodeInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.location.push(SourceCodeInfo_Location.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<SourceCodeInfo>, I>>(base?: I): SourceCodeInfo {\n    return SourceCodeInfo.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SourceCodeInfo>, I>>(object: I): SourceCodeInfo {\n    const message = createBaseSourceCodeInfo();\n    message.location = object.location?.map((e) => SourceCodeInfo_Location.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseSourceCodeInfo_Location(): SourceCodeInfo_Location {\n  return { path: [], span: [], leadingComments: \"\", trailingComments: \"\", leadingDetachedComments: [] };\n}\n\nexport const SourceCodeInfo_Location: MessageFns<SourceCodeInfo_Location> = {\n  encode(message: SourceCodeInfo_Location, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    writer.uint32(10).fork();\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(18).fork();\n    for (const v of message.span) {\n      writer.int32(v);\n    }\n    writer.join();\n    if (message.leadingComments !== undefined && message.leadingComments !== \"\") {\n      writer.uint32(26).string(message.leadingComments);\n    }\n    if (message.trailingComments !== undefined && message.trailingComments !== \"\") {\n      writer.uint32(34).string(message.trailingComments);\n    }\n    for (const v of message.leadingDetachedComments) {\n      writer.uint32(50).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SourceCodeInfo_Location {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSourceCodeInfo_Location();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag === 8) {\n            message.path.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 10) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 2: {\n          if (tag === 16) {\n            message.span.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 18) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.span.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.leadingComments = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.trailingComments = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.leadingDetachedComments.push(reader.string());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<SourceCodeInfo_Location>, I>>(base?: I): SourceCodeInfo_Location {\n    return SourceCodeInfo_Location.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SourceCodeInfo_Location>, I>>(object: I): SourceCodeInfo_Location {\n    const message = createBaseSourceCodeInfo_Location();\n    message.path = object.path?.map((e) => e) || [];\n    message.span = object.span?.map((e) => e) || [];\n    message.leadingComments = object.leadingComments ?? \"\";\n    message.trailingComments = object.trailingComments ?? \"\";\n    message.leadingDetachedComments = object.leadingDetachedComments?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseGeneratedCodeInfo(): GeneratedCodeInfo {\n  return { annotation: [] };\n}\n\nexport const GeneratedCodeInfo: MessageFns<GeneratedCodeInfo> = {\n  encode(message: GeneratedCodeInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.annotation) {\n      GeneratedCodeInfo_Annotation.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GeneratedCodeInfo {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGeneratedCodeInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.annotation.push(GeneratedCodeInfo_Annotation.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<GeneratedCodeInfo>, I>>(base?: I): GeneratedCodeInfo {\n    return GeneratedCodeInfo.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GeneratedCodeInfo>, I>>(object: I): GeneratedCodeInfo {\n    const message = createBaseGeneratedCodeInfo();\n    message.annotation = object.annotation?.map((e) => GeneratedCodeInfo_Annotation.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGeneratedCodeInfo_Annotation(): GeneratedCodeInfo_Annotation {\n  return { path: [], sourceFile: \"\", begin: 0, end: 0 };\n}\n\nexport const GeneratedCodeInfo_Annotation: MessageFns<GeneratedCodeInfo_Annotation> = {\n  encode(message: GeneratedCodeInfo_Annotation, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    writer.uint32(10).fork();\n    for (const v of message.path) {\n      writer.int32(v);\n    }\n    writer.join();\n    if (message.sourceFile !== undefined && message.sourceFile !== \"\") {\n      writer.uint32(18).string(message.sourceFile);\n    }\n    if (message.begin !== undefined && message.begin !== 0) {\n      writer.uint32(24).int32(message.begin);\n    }\n    if (message.end !== undefined && message.end !== 0) {\n      writer.uint32(32).int32(message.end);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GeneratedCodeInfo_Annotation {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGeneratedCodeInfo_Annotation();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag === 8) {\n            message.path.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 10) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.path.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.sourceFile = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 24) {\n            break;\n          }\n\n          message.begin = reader.int32();\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.end = reader.int32();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  create<I extends Exact<DeepPartial<GeneratedCodeInfo_Annotation>, I>>(base?: I): GeneratedCodeInfo_Annotation {\n    return GeneratedCodeInfo_Annotation.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GeneratedCodeInfo_Annotation>, I>>(object: I): GeneratedCodeInfo_Annotation {\n    const message = createBaseGeneratedCodeInfo_Annotation();\n    message.path = object.path?.map((e) => e) || [];\n    message.sourceFile = object.sourceFile ?? \"\";\n    message.begin = object.begin ?? 0;\n    message.end = object.end ?? 0;\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string } ? { [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]> } & { $case: T[\"$case\"] }\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"]}