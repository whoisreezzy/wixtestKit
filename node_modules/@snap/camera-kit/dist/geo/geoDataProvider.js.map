{"version":3,"file":"geoDataProvider.js","sourceRoot":"","sources":["../../src/geo/geoDataProvider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAM7C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AA4BhG,MAAM,UAAU,SAAS,CAAC,KAAc;IACpC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3D,CAAC;AAED,SAAS,aAAa,CAAC,KAAc;IACjC,OAAO,CACH,QAAQ,CAAC,KAAK,CAAC;QACf,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC;QAC5B,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QACvB,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1B,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC;QACnC,aAAa,CAAC,uBAAuB,EAAE,KAAK,CAAC,eAAe,CAAC,CAChE,CAAC;AACN,CAAC;AAED,SAAS,uBAAuB,CAAC,KAAc;IAC3C,OAAO,CACH,QAAQ,CAAC,KAAK,CAAC;QACf,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;QACvB,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1B,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC;QAC3B,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC;QAChC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CAAC;AACN,CAAC;AAKD,MAAM,CAAC,MAAM,sBAAsB,GAAG,UAAU,CAAC,iBAAiB,EAAE,GAAoB,EAAE;IACtF,OAAO,GAAG,EAAE,CAAC,SAAS,CAAC;AAC3B,CAAC,CAAC,CAAC","sourcesContent":["import { Injectable } from \"@snap/ts-inject\";\nimport type {\n    GeoData as GeoDataOrig,\n    WeatherData as WeatherDataOrig,\n    HourlyWeatherForecast as HourlyWeatherForecastOrig,\n} from \"../lens-core-module/generated-types\";\nimport { isArrayOfType, isNumber, isRecord, isString, isUndefined } from \"../common/typeguards\";\n\n/**\n * @internal\n */\ntype GeoData = GeoDataOrig;\n\n/**\n * @internal\n */\ntype WeatherData = WeatherDataOrig;\n\n/**\n * @internal\n */\ntype HourlyWeatherForecast = HourlyWeatherForecastOrig;\n\nexport { GeoData, WeatherData, HourlyWeatherForecast };\n\n/**\n * @internal\n */\nexport type GeoDataProvider = () => GeoData | undefined;\n\n/**\n *\n * @internal\n */\nexport function isGeoData(value: unknown): value is GeoData {\n    return isRecord(value) && isWeatherData(value.weather);\n}\n\nfunction isWeatherData(value: unknown): value is WeatherData {\n    return (\n        isRecord(value) &&\n        isString(value.locationName) &&\n        isNumber(value.celsius) &&\n        isNumber(value.fahrenheit) &&\n        !isUndefined(value.hourlyForecasts) &&\n        isArrayOfType(isHourlyWeatherForecast, value.hourlyForecasts)\n    );\n}\n\nfunction isHourlyWeatherForecast(value: unknown): value is HourlyWeatherForecast {\n    return (\n        isRecord(value) &&\n        isNumber(value.celsius) &&\n        isNumber(value.fahrenheit) &&\n        isString(value.displayTime) &&\n        isString(value.weatherCondition) &&\n        isString(value.localizedWeatherCondition)\n    );\n}\n\n/**\n * @internal\n */\nexport const geoDataProviderFactory = Injectable(\"geoDataProvider\", (): GeoDataProvider => {\n    return () => undefined;\n});\n"]}