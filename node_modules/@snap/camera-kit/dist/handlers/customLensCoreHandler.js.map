{"version":3,"file":"customLensCoreHandler.js","sourceRoot":"","sources":["../../src/handlers/customLensCoreHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAShD,MAAM,CAAC,MAAM,2BAA2B,GAAG,GAMzC,EAAE;IACA,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;;QAC7B,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,mCAAI,EAAE,CAAC;QAIvD,IAAI,GAAG,CAAC,UAAU,CAAC,qCAAqC,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC,KAAK,kCACV,IAAI,KACP,WAAW,EAAE,SAAS,IACxB,CAAC;SACN;QACD,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { isString } from \"../common/typeguards\";\nimport type { ChainableHandler } from \"./HandlerChainBuilder\";\nimport { HandlerChainBuilder } from \"./HandlerChainBuilder\";\n\n/**\n * Adds cookies to auth requests to custom LensCore binaries.\n *\n * @returns {@link ChainableHandler}, suitable for use in {@link HandlerChainBuilder.map}\n */\nexport const createCustomLensCoreHandler = <Res>(): ChainableHandler<\n    RequestInfo,\n    Res,\n    RequestInfo,\n    Res,\n    RequestInit | undefined\n> => {\n    return (next) => (input, init) => {\n        const url = isString(input) ? input : input?.url ?? \"\";\n        // if requests are made to internal LensCore binaries site\n        // we have to include cookies for auth purposes\n        // as per https://wiki.sc-corp.net/x/KsnRCg\n        if (url.startsWith(\"https://lens-core-wasm.sc-corp.net/\")) {\n            return next(input, {\n                ...init,\n                credentials: \"include\",\n            });\n        }\n        return next(input, init);\n    };\n};\n"]}